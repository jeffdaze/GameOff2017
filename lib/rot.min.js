





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://assets-cdn.github.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-d7137690e30123bade38abb082ac79f36cc7a105ff92e602405f53b725465cab.css" integrity="sha256-1xN2kOMBI7reOKuwgqx582zHoQX/kuYCQF9TtyVGXKs=" media="all" rel="stylesheet" />
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-e6832596e89dcbb521f388f88a82cae8e7c5af2e16a012477da3e891c8ea94cd.css" integrity="sha256-5oMlluidy7Uh84j4ioLK6OfFry4WoBJHfaPokcjqlM0=" media="all" rel="stylesheet" />
  
  
  
  

  <meta name="viewport" content="width=device-width">
  
  <title>rot.js/rot.min.js at master Â· ondras/rot.js</title>
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta content="https://avatars0.githubusercontent.com/u/192172?s=400&amp;v=4" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="ondras/rot.js" property="og:title" /><meta content="https://github.com/ondras/rot.js" property="og:url" /><meta content="rot.js - ROguelike Toolkit" property="og:description" />

  <link rel="assets" href="https://assets-cdn.github.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6MjYyNDE2NzE6YjEzYzJiYWU4MzI3ZDA4OGEwNGM3YWI2OWY1ZjY2ZGZkZTllNDQwOTNlMzA5YjEwODZmYzNjYTRjNTQ3OGRjMA==--4c67f2146515c853a43f3c8d51f096efc98f5190">
  <meta name="pjax-timeout" content="1000">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="DEB7:111D5:4FBA02:9C81EF:5A00957B" data-pjax-transient>
  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

  <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="https://collector.githubapp.com/github-external/browser_event" name="octolytics-event-url" /><meta content="DEB7:111D5:4FBA02:9C81EF:5A00957B" name="octolytics-dimension-request_id" /><meta content="iad" name="octolytics-dimension-region_edge" /><meta content="iad" name="octolytics-dimension-region_render" /><meta content="2178396" name="octolytics-actor-id" /><meta content="jeffdaze" name="octolytics-actor-login" /><meta content="571cd0397303a0910a5e09bffad14b5406d48a94b180e3ca24d1ad34001da6e0" name="octolytics-actor-hash" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />




  <meta class="js-ga-set" name="dimension1" content="Logged In">


  

      <meta name="hostname" content="github.com">
  <meta name="user-login" content="jeffdaze">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="OWRiOGYyZjEzNmFjNzlkZDUzY2FhMDBiMzVkNzcwNDViMjJhMzZkNjEwYzBiZDQxMmIzMGNiZjBhNjYwMmEwNXx7InJlbW90ZV9hZGRyZXNzIjoiNjkuNDkuMTE0LjEwIiwicmVxdWVzdF9pZCI6IkRFQjc6MTExRDU6NEZCQTAyOjlDODFFRjo1QTAwOTU3QiIsInRpbWVzdGFtcCI6MTUwOTk4NzcwNywiaG9zdCI6ImdpdGh1Yi5jb20ifQ==">

    <meta name="enabled-features" content="UNIVERSE_BANNER,FREE_TRIALS">

  <meta name="html-safe-nonce" content="4498961d8f7f9600fb1fcff2575654a816848037">

  <meta http-equiv="x-pjax-version" content="cd84bd53777fbb8974e38fc13cd3fb69">
  

      <link href="https://github.com/ondras/rot.js/commits/master.atom" rel="alternate" title="Recent Commits to rot.js:master" type="application/atom+xml">

  <meta name="description" content="rot.js - ROguelike Toolkit">
  <meta name="go-import" content="github.com/ondras/rot.js git https://github.com/ondras/rot.js.git">

  <meta content="192172" name="octolytics-dimension-user_id" /><meta content="ondras" name="octolytics-dimension-user_login" /><meta content="4391145" name="octolytics-dimension-repository_id" /><meta content="ondras/rot.js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="4391145" name="octolytics-dimension-repository_network_root_id" /><meta content="ondras/rot.js" name="octolytics-dimension-repository_network_root_nwo" /><meta content="false" name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" />


    <link rel="canonical" href="https://github.com/ondras/rot.js/blob/master/rot.min.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

  </head>

  <body class="logged-in env-production emoji-size-boost page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="bg-black text-white p-3 show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        
<header class="Header  f5" role="banner">
  <div class="d-flex px-3 flex-justify-between container-lg">
    <div class="d-flex flex-justify-between">
      <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg aria-hidden="true" class="octicon octicon-mark-github" height="32" version="1.1" viewBox="0 0 16 16" width="32"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>


    </div>

    <div class="HeaderMenu d-flex flex-justify-between flex-auto">
      <div class="d-flex">
            <div class="">
              <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/ondras/rot.js/search" class="js-site-search-form" data-scoped-search-url="/ondras/rot.js/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
        <a href="/ondras/rot.js/blob/master/rot.min.js" class="header-search-scope no-underline">This repository</a>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        value=""
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
        <input type="hidden" class="js-site-search-type-field" name="type" >
    </label>
</form></div>

            </div>

          <ul class="d-flex pl-2 flex-items-center text-bold list-style-none" role="navigation">
            <li>
              <a href="/pulls" aria-label="Pull requests you created" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
                Pull requests
</a>            </li>
            <li>
              <a href="/issues" aria-label="Issues you created" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
                Issues
</a>            </li>
                <li>
                  <a href="/marketplace" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-selected-links=" /marketplace">
                    Marketplace
</a>                </li>
            <li>
              <a href="/explore" class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore">
                Explore
</a>            </li>
          </ul>
      </div>

      <div class="d-flex">
        
<ul class="user-nav d-flex flex-items-center list-style-none" id="user-links">
  <li class="dropdown js-menu-container js-header-notifications">
    <span class="d-inline-block  px-2">
      
      <a href="/notifications" aria-label="You have no unread notifications" class="notification-indicator tooltipped tooltipped-s  js-socket-channel js-notification-indicator" data-channel="notification-changed:2178396" data-ga-click="Header, go to notifications, icon:read" data-hotkey="g n">
          <span class="mail-status "></span>
          <svg aria-hidden="true" class="octicon octicon-bell" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z"/></svg>
</a>
    </span>
  </li>

  <li class="dropdown js-menu-container">
    <details class="dropdown-details js-dropdown-details d-flex px-2 flex-items-center">
      <summary class="HeaderNavlink"
         aria-label="Create newâ¦"
         data-ga-click="Header, create new, icon:add">
        <svg aria-hidden="true" class="octicon octicon-plus float-left mr-1 mt-1" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"/></svg>
        <span class="dropdown-caret mt-1"></span>
      </summary>

      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="ondras/rot.js">This repository</span>
  </div>
    <a class="dropdown-item" href="/ondras/rot.js/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </details>
  </li>

  <li class="dropdown js-menu-container">

    <details class="dropdown-details js-dropdown-details d-flex pl-2 flex-items-center">
      <summary class="HeaderNavlink name mt-1"
        aria-label="View profile and more"
        data-ga-click="Header, show menu, icon:avatar">
        <img alt="@jeffdaze" class="avatar float-left mr-1" src="https://avatars0.githubusercontent.com/u/2178396?s=40&amp;v=4" height="20" width="20">
        <span class="dropdown-caret"></span>
      </summary>

      <ul class="dropdown-menu dropdown-menu-sw">
        <li class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">jeffdaze</strong>
        </li>

        <li class="dropdown-divider"></li>

        <li><a class="dropdown-item" href="/jeffdaze" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a></li>
        <li><a class="dropdown-item" href="/jeffdaze?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a></li>
          <li><a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, your gists, text:your gists">Your Gists</a></li>

        <li class="dropdown-divider"></li>

        <li><a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a></li>

        <li><a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a></li>

        <li><!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Tv61CwDL126tdNQudtbctphbeN/Oo01btaOFB+qrFnDznH7liGfgok+9YMZ0koc1N20adWFvA+8fw/rSvvZN9A==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
        </form></li>
      </ul>
    </details>
  </li>
</ul>


        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="sr-only right-0" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="9aExStgFdAbW2mviRne/q93PDTbbcKeCq8PMp7pNBjFIw/qkUKlDyjQT3wpEM+QocvlvnHS86TYBo7Ny7hBdtQ==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </div>
</header>


      

  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">
</div>



  <div role="main">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
      





    <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav ">
      <div class="repohead-details-container clearfix container ">

        <ul class="pagehead-actions">
  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="GvE4kubx/k9+CaULpG5+DmM7gGTHmA3RwkZCElyaoijlgkaI/PL4xNj9uIhxAex94ZRKVQVXV25ZL0MZC34RZQ==" /></div>      <input class="form-control" id="repository_id" name="repository_id" type="hidden" value="4391145" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/ondras/rot.js/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target"
            role="button"
            aria-haspopup="true"
            aria-expanded="false"
            aria-label="Toggle repository notifications menu"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
                <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                Watch
            </span>
          </a>
            <a class="social-count js-social-count"
              href="/ondras/rot.js/watchers"
              aria-label="84 users are watching this repository">
              84
            </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                        Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_ignore" name="do" type="radio" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-mute" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                        Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/ondras/rot.js/unstar" class="starred js-social-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="OkKs/ctWEjo6LC3AJqs3QazAECeX4+g2XErHx+47G24CTYr9AzfH+TSpEmrsuYR00U5El8XNecPuun6gWJvbHw==" /></div>
      <input type="hidden" name="context" value="repository"></input>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar ondras/rot.js"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/ondras/rot.js/stargazers"
           aria-label="1113 users starred this repository">
          1,113
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/ondras/rot.js/star" class="unstarred js-social-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="2yqo+WDWAJ6et5nR0Sho5pqF8nRdMfRVmDMOCNQnb6R4ZZsE0Unec7vAm1lkPDDohaKsGjE3izveqD6iq9tJ9Q==" /></div>
      <input type="hidden" name="context" value="repository"></input>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star ondras/rot.js"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/ondras/rot.js/stargazers"
           aria-label="1113 users starred this repository">
          1,113
        </a>
</form>  </div>

  </li>

  <li>
          <a href="#fork-destination-box" class="btn btn-sm btn-with-count"
              title="Fork your own copy of ondras/rot.js to your account"
              aria-label="Fork your own copy of ondras/rot.js to your account"
              rel="facebox"
              data-ga-click="Repository, show fork modal, action:blob#show; text:Fork">
              <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
            Fork
          </a>

          <div id="fork-destination-box" style="display: none;">
            <h2 class="facebox-header" data-facebox-id="facebox-header">Where should we fork this repository?</h2>
            <include-fragment src=""
                class="js-fork-select-fragment fork-select-fragment"
                data-url="/ondras/rot.js/fork?fragment=1">
              <img alt="Loading" height="64" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-128.gif" width="64" />
            </include-fragment>
          </div>

    <a href="/ondras/rot.js/network" class="social-count"
       aria-label="159 users forked this repository">
      159
    </a>
  </li>
</ul>

        <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a href="/ondras" class="url fn" rel="author">ondras</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/ondras/rot.js" data-pjax="#js-repo-pjax-container">rot.js</a></strong>

</h1>

      </div>
      
<nav class="reponav js-repo-nav js-sidenav-container-pjax container"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/ondras/rot.js" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /ondras/rot.js" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/ondras/rot.js/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /ondras/rot.js/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">21</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/ondras/rot.js/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /ondras/rot.js/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">7</span>
      <meta itemprop="position" content="3">
</a>  </span>

    <a href="/ondras/rot.js/projects" class="js-selected-navigation-item reponav-item" data-hotkey="g b" data-selected-links="repo_projects new_repo_project repo_project /ondras/rot.js/projects">
      <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>
    <a href="/ondras/rot.js/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /ondras/rot.js/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

  <a href="/ondras/rot.js/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse /ondras/rot.js/pulse">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Insights
</a>

</nav>


    </div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    
  <a href="/ondras/rot.js/blob/2e423bc6af85e8fbdd166a9abc0ea509b9594ebe/rot.min.js" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

  <!-- blob contrib key: blob_contributors:v21:a9bf258441cbe52a0907c49271d5f2c8 -->

  <div class="file-navigation js-zeroclipboard-container">
    
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class=" btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" aria-expanded="false" aria-haspopup="true">
      <i>Branch:</i>
      <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/ondras/rot.js/blob/master/rot.min.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/ondras/rot.js/blob/newhex/rot.min.js"
               data-name="newhex"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                newhex
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/ondras/rot.js/tree/v0.6.0/rot.min.js"
              data-name="v0.6.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v0.6.0">
                v0.6.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/ondras/rot.js/tree/v0.5.0/rot.min.js"
              data-name="v0.5.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="v0.5.0">
                v0.5.0
              </span>
            </a>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

    <div class="BtnGroup float-right">
      <a href="/ondras/rot.js/find/master"
            class="js-pjax-capture-input btn btn-sm BtnGroup-item"
            data-pjax
            data-hotkey="t">
        Find file
      </a>
      <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
    </div>
    <div class="breadcrumb js-zeroclipboard-target">
      <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/ondras/rot.js"><span>rot.js</span></a></span></span><span class="separator">/</span><strong class="final-path">rot.min.js</strong>
    </div>
  </div>


  <include-fragment class="commit-tease" src="/ondras/rot.js/contributors/master/rot.min.js">
    <div>
      Fetching contributors&hellip;
    </div>

    <div class="commit-tease-contributors">
      <img alt="" class="loader-loading float-left" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" />
      <span class="loader-error">Cannot retrieve contributors at this time</span>
    </div>
</include-fragment>

  <div class="file">
    <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/ondras/rot.js/raw/master/rot.min.js" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/ondras/rot.js/blame/master/rot.min.js" class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b">Blame</a>
      <a href="/ondras/rot.js/commits/master/rot.min.js" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="https://desktop.github.com"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:mac">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/ondras/rot.js/edit/master/rot.min.js" class="inline-form js-update-url-with-hash" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="8+y9UN0oquKHJuqiAzWH9m7xSiqZkX01sHfJt4T+RjqMOZjMwAkAKaJ7GlLKlT9HA52qJQoJtnb3rLUftw6FAA==" /></div>
          <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
          </button>
</form>        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/ondras/rot.js/delete/master/rot.min.js" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="PQOidjQHyJwQdD+xDu/uox3ZyK+EPFojLHl4AvwZ5DvK95b/TmRyDL82S9Fvs6OP7sfLXJmeaK7V1X0rZmEjXg==" /></div>
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
</form>  </div>

  <div class="file-info">
      126 lines (125 sloc)
      <span class="file-info-divider"></span>
    62.2 KB
  </div>
</div>

    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">a</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> define<span class="pl-k">&amp;&amp;</span><span class="pl-smi">define</span>.<span class="pl-smi">amd</span><span class="pl-k">?</span><span class="pl-en">define</span>([],a)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">exports</span><span class="pl-k">?</span><span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span><span class="pl-en">a</span>()<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">ROT</span><span class="pl-k">=</span><span class="pl-en">a</span>()})(<span class="pl-c1">this</span>,<span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span>{<span class="pl-en">isSupported</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span>(<span class="pl-k">!</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">getContext</span><span class="pl-k">||!</span><span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">bind</span>)},<span class="pl-c1">DEFAULT_WIDTH</span><span class="pl-k">:</span><span class="pl-c1">80</span>,<span class="pl-c1">DEFAULT_HEIGHT</span><span class="pl-k">:</span><span class="pl-c1">25</span>,<span class="pl-c1">DIRS</span><span class="pl-k">:</span>{<span class="pl-c1">4</span><span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>]],<span class="pl-c1">8</span><span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>]],<span class="pl-c1">6</span><span class="pl-k">:</span>[[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">2</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-c1">0</span>]]},<span class="pl-c1">VK_CANCEL</span><span class="pl-k">:</span><span class="pl-c1">3</span>,<span class="pl-c1">VK_HELP</span><span class="pl-k">:</span><span class="pl-c1">6</span>,<span class="pl-c1">VK_BACK_SPACE</span><span class="pl-k">:</span><span class="pl-c1">8</span>,<span class="pl-c1">VK_TAB</span><span class="pl-k">:</span><span class="pl-c1">9</span>,<span class="pl-c1">VK_CLEAR</span><span class="pl-k">:</span><span class="pl-c1">12</span>,<span class="pl-c1">VK_RETURN</span><span class="pl-k">:</span><span class="pl-c1">13</span>,<span class="pl-c1">VK_ENTER</span><span class="pl-k">:</span><span class="pl-c1">14</span>,</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">VK_SHIFT</span><span class="pl-k">:</span><span class="pl-c1">16</span>,<span class="pl-c1">VK_CONTROL</span><span class="pl-k">:</span><span class="pl-c1">17</span>,<span class="pl-c1">VK_ALT</span><span class="pl-k">:</span><span class="pl-c1">18</span>,<span class="pl-c1">VK_PAUSE</span><span class="pl-k">:</span><span class="pl-c1">19</span>,<span class="pl-c1">VK_CAPS_LOCK</span><span class="pl-k">:</span><span class="pl-c1">20</span>,<span class="pl-c1">VK_ESCAPE</span><span class="pl-k">:</span><span class="pl-c1">27</span>,<span class="pl-c1">VK_SPACE</span><span class="pl-k">:</span><span class="pl-c1">32</span>,<span class="pl-c1">VK_PAGE_UP</span><span class="pl-k">:</span><span class="pl-c1">33</span>,<span class="pl-c1">VK_PAGE_DOWN</span><span class="pl-k">:</span><span class="pl-c1">34</span>,<span class="pl-c1">VK_END</span><span class="pl-k">:</span><span class="pl-c1">35</span>,<span class="pl-c1">VK_HOME</span><span class="pl-k">:</span><span class="pl-c1">36</span>,<span class="pl-c1">VK_LEFT</span><span class="pl-k">:</span><span class="pl-c1">37</span>,<span class="pl-c1">VK_UP</span><span class="pl-k">:</span><span class="pl-c1">38</span>,<span class="pl-c1">VK_RIGHT</span><span class="pl-k">:</span><span class="pl-c1">39</span>,<span class="pl-c1">VK_DOWN</span><span class="pl-k">:</span><span class="pl-c1">40</span>,<span class="pl-c1">VK_PRINTSCREEN</span><span class="pl-k">:</span><span class="pl-c1">44</span>,<span class="pl-c1">VK_INSERT</span><span class="pl-k">:</span><span class="pl-c1">45</span>,<span class="pl-c1">VK_DELETE</span><span class="pl-k">:</span><span class="pl-c1">46</span>,<span class="pl-c1">VK_0</span><span class="pl-k">:</span><span class="pl-c1">48</span>,<span class="pl-c1">VK_1</span><span class="pl-k">:</span><span class="pl-c1">49</span>,<span class="pl-c1">VK_2</span><span class="pl-k">:</span><span class="pl-c1">50</span>,<span class="pl-c1">VK_3</span><span class="pl-k">:</span><span class="pl-c1">51</span>,<span class="pl-c1">VK_4</span><span class="pl-k">:</span><span class="pl-c1">52</span>,<span class="pl-c1">VK_5</span><span class="pl-k">:</span><span class="pl-c1">53</span>,<span class="pl-c1">VK_6</span><span class="pl-k">:</span><span class="pl-c1">54</span>,<span class="pl-c1">VK_7</span><span class="pl-k">:</span><span class="pl-c1">55</span>,<span class="pl-c1">VK_8</span><span class="pl-k">:</span><span class="pl-c1">56</span>,<span class="pl-c1">VK_9</span><span class="pl-k">:</span><span class="pl-c1">57</span>,<span class="pl-c1">VK_COLON</span><span class="pl-k">:</span><span class="pl-c1">58</span>,<span class="pl-c1">VK_SEMICOLON</span><span class="pl-k">:</span><span class="pl-c1">59</span>,<span class="pl-c1">VK_LESS_THAN</span><span class="pl-k">:</span><span class="pl-c1">60</span>,<span class="pl-c1">VK_EQUALS</span><span class="pl-k">:</span><span class="pl-c1">61</span>,<span class="pl-c1">VK_GREATER_THAN</span><span class="pl-k">:</span><span class="pl-c1">62</span>,<span class="pl-c1">VK_QUESTION_MARK</span><span class="pl-k">:</span><span class="pl-c1">63</span>,<span class="pl-c1">VK_AT</span><span class="pl-k">:</span><span class="pl-c1">64</span>,<span class="pl-c1">VK_A</span><span class="pl-k">:</span><span class="pl-c1">65</span>,<span class="pl-c1">VK_B</span><span class="pl-k">:</span><span class="pl-c1">66</span>,<span class="pl-c1">VK_C</span><span class="pl-k">:</span><span class="pl-c1">67</span>,<span class="pl-c1">VK_D</span><span class="pl-k">:</span><span class="pl-c1">68</span>,<span class="pl-c1">VK_E</span><span class="pl-k">:</span><span class="pl-c1">69</span>,<span class="pl-c1">VK_F</span><span class="pl-k">:</span><span class="pl-c1">70</span>,<span class="pl-c1">VK_G</span><span class="pl-k">:</span><span class="pl-c1">71</span>,<span class="pl-c1">VK_H</span><span class="pl-k">:</span><span class="pl-c1">72</span>,<span class="pl-c1">VK_I</span><span class="pl-k">:</span><span class="pl-c1">73</span>,<span class="pl-c1">VK_J</span><span class="pl-k">:</span><span class="pl-c1">74</span>,<span class="pl-c1">VK_K</span><span class="pl-k">:</span><span class="pl-c1">75</span>,<span class="pl-c1">VK_L</span><span class="pl-k">:</span><span class="pl-c1">76</span>,</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">VK_M</span><span class="pl-k">:</span><span class="pl-c1">77</span>,<span class="pl-c1">VK_N</span><span class="pl-k">:</span><span class="pl-c1">78</span>,<span class="pl-c1">VK_O</span><span class="pl-k">:</span><span class="pl-c1">79</span>,<span class="pl-c1">VK_P</span><span class="pl-k">:</span><span class="pl-c1">80</span>,<span class="pl-c1">VK_Q</span><span class="pl-k">:</span><span class="pl-c1">81</span>,<span class="pl-c1">VK_R</span><span class="pl-k">:</span><span class="pl-c1">82</span>,<span class="pl-c1">VK_S</span><span class="pl-k">:</span><span class="pl-c1">83</span>,<span class="pl-c1">VK_T</span><span class="pl-k">:</span><span class="pl-c1">84</span>,<span class="pl-c1">VK_U</span><span class="pl-k">:</span><span class="pl-c1">85</span>,<span class="pl-c1">VK_V</span><span class="pl-k">:</span><span class="pl-c1">86</span>,<span class="pl-c1">VK_W</span><span class="pl-k">:</span><span class="pl-c1">87</span>,<span class="pl-c1">VK_X</span><span class="pl-k">:</span><span class="pl-c1">88</span>,<span class="pl-c1">VK_Y</span><span class="pl-k">:</span><span class="pl-c1">89</span>,<span class="pl-c1">VK_Z</span><span class="pl-k">:</span><span class="pl-c1">90</span>,<span class="pl-c1">VK_CONTEXT_MENU</span><span class="pl-k">:</span><span class="pl-c1">93</span>,<span class="pl-c1">VK_NUMPAD0</span><span class="pl-k">:</span><span class="pl-c1">96</span>,<span class="pl-c1">VK_NUMPAD1</span><span class="pl-k">:</span><span class="pl-c1">97</span>,<span class="pl-c1">VK_NUMPAD2</span><span class="pl-k">:</span><span class="pl-c1">98</span>,<span class="pl-c1">VK_NUMPAD3</span><span class="pl-k">:</span><span class="pl-c1">99</span>,<span class="pl-c1">VK_NUMPAD4</span><span class="pl-k">:</span><span class="pl-c1">100</span>,<span class="pl-c1">VK_NUMPAD5</span><span class="pl-k">:</span><span class="pl-c1">101</span>,<span class="pl-c1">VK_NUMPAD6</span><span class="pl-k">:</span><span class="pl-c1">102</span>,<span class="pl-c1">VK_NUMPAD7</span><span class="pl-k">:</span><span class="pl-c1">103</span>,<span class="pl-c1">VK_NUMPAD8</span><span class="pl-k">:</span><span class="pl-c1">104</span>,<span class="pl-c1">VK_NUMPAD9</span><span class="pl-k">:</span><span class="pl-c1">105</span>,<span class="pl-c1">VK_MULTIPLY</span><span class="pl-k">:</span><span class="pl-c1">106</span>,<span class="pl-c1">VK_ADD</span><span class="pl-k">:</span><span class="pl-c1">107</span>,<span class="pl-c1">VK_SEPARATOR</span><span class="pl-k">:</span><span class="pl-c1">108</span>,<span class="pl-c1">VK_SUBTRACT</span><span class="pl-k">:</span><span class="pl-c1">109</span>,<span class="pl-c1">VK_DECIMAL</span><span class="pl-k">:</span><span class="pl-c1">110</span>,<span class="pl-c1">VK_DIVIDE</span><span class="pl-k">:</span><span class="pl-c1">111</span>,<span class="pl-c1">VK_F1</span><span class="pl-k">:</span><span class="pl-c1">112</span>,<span class="pl-c1">VK_F2</span><span class="pl-k">:</span><span class="pl-c1">113</span>,<span class="pl-c1">VK_F3</span><span class="pl-k">:</span><span class="pl-c1">114</span>,<span class="pl-c1">VK_F4</span><span class="pl-k">:</span><span class="pl-c1">115</span>,<span class="pl-c1">VK_F5</span><span class="pl-k">:</span><span class="pl-c1">116</span>,<span class="pl-c1">VK_F6</span><span class="pl-k">:</span><span class="pl-c1">117</span>,<span class="pl-c1">VK_F7</span><span class="pl-k">:</span><span class="pl-c1">118</span>,<span class="pl-c1">VK_F8</span><span class="pl-k">:</span><span class="pl-c1">119</span>,<span class="pl-c1">VK_F9</span><span class="pl-k">:</span><span class="pl-c1">120</span>,<span class="pl-c1">VK_F10</span><span class="pl-k">:</span><span class="pl-c1">121</span>,<span class="pl-c1">VK_F11</span><span class="pl-k">:</span><span class="pl-c1">122</span>,<span class="pl-c1">VK_F12</span><span class="pl-k">:</span><span class="pl-c1">123</span>,<span class="pl-c1">VK_F13</span><span class="pl-k">:</span><span class="pl-c1">124</span>,<span class="pl-c1">VK_F14</span><span class="pl-k">:</span><span class="pl-c1">125</span>,</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">VK_F15</span><span class="pl-k">:</span><span class="pl-c1">126</span>,<span class="pl-c1">VK_F16</span><span class="pl-k">:</span><span class="pl-c1">127</span>,<span class="pl-c1">VK_F17</span><span class="pl-k">:</span><span class="pl-c1">128</span>,<span class="pl-c1">VK_F18</span><span class="pl-k">:</span><span class="pl-c1">129</span>,<span class="pl-c1">VK_F19</span><span class="pl-k">:</span><span class="pl-c1">130</span>,<span class="pl-c1">VK_F20</span><span class="pl-k">:</span><span class="pl-c1">131</span>,<span class="pl-c1">VK_F21</span><span class="pl-k">:</span><span class="pl-c1">132</span>,<span class="pl-c1">VK_F22</span><span class="pl-k">:</span><span class="pl-c1">133</span>,<span class="pl-c1">VK_F23</span><span class="pl-k">:</span><span class="pl-c1">134</span>,<span class="pl-c1">VK_F24</span><span class="pl-k">:</span><span class="pl-c1">135</span>,<span class="pl-c1">VK_NUM_LOCK</span><span class="pl-k">:</span><span class="pl-c1">144</span>,<span class="pl-c1">VK_SCROLL_LOCK</span><span class="pl-k">:</span><span class="pl-c1">145</span>,<span class="pl-c1">VK_CIRCUMFLEX</span><span class="pl-k">:</span><span class="pl-c1">160</span>,<span class="pl-c1">VK_EXCLAMATION</span><span class="pl-k">:</span><span class="pl-c1">161</span>,<span class="pl-c1">VK_DOUBLE_QUOTE</span><span class="pl-k">:</span><span class="pl-c1">162</span>,<span class="pl-c1">VK_HASH</span><span class="pl-k">:</span><span class="pl-c1">163</span>,<span class="pl-c1">VK_DOLLAR</span><span class="pl-k">:</span><span class="pl-c1">164</span>,<span class="pl-c1">VK_PERCENT</span><span class="pl-k">:</span><span class="pl-c1">165</span>,<span class="pl-c1">VK_AMPERSAND</span><span class="pl-k">:</span><span class="pl-c1">166</span>,<span class="pl-c1">VK_UNDERSCORE</span><span class="pl-k">:</span><span class="pl-c1">167</span>,<span class="pl-c1">VK_OPEN_PAREN</span><span class="pl-k">:</span><span class="pl-c1">168</span>,<span class="pl-c1">VK_CLOSE_PAREN</span><span class="pl-k">:</span><span class="pl-c1">169</span>,<span class="pl-c1">VK_ASTERISK</span><span class="pl-k">:</span><span class="pl-c1">170</span>,<span class="pl-c1">VK_PLUS</span><span class="pl-k">:</span><span class="pl-c1">171</span>,<span class="pl-c1">VK_PIPE</span><span class="pl-k">:</span><span class="pl-c1">172</span>,<span class="pl-c1">VK_HYPHEN_MINUS</span><span class="pl-k">:</span><span class="pl-c1">173</span>,<span class="pl-c1">VK_OPEN_CURLY_BRACKET</span><span class="pl-k">:</span><span class="pl-c1">174</span>,<span class="pl-c1">VK_CLOSE_CURLY_BRACKET</span><span class="pl-k">:</span><span class="pl-c1">175</span>,<span class="pl-c1">VK_TILDE</span><span class="pl-k">:</span><span class="pl-c1">176</span>,<span class="pl-c1">VK_COMMA</span><span class="pl-k">:</span><span class="pl-c1">188</span>,<span class="pl-c1">VK_PERIOD</span><span class="pl-k">:</span><span class="pl-c1">190</span>,<span class="pl-c1">VK_SLASH</span><span class="pl-k">:</span><span class="pl-c1">191</span>,<span class="pl-c1">VK_BACK_QUOTE</span><span class="pl-k">:</span><span class="pl-c1">192</span>,<span class="pl-c1">VK_OPEN_BRACKET</span><span class="pl-k">:</span><span class="pl-c1">219</span>,</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">VK_BACK_SLASH</span><span class="pl-k">:</span><span class="pl-c1">220</span>,<span class="pl-c1">VK_CLOSE_BRACKET</span><span class="pl-k">:</span><span class="pl-c1">221</span>,<span class="pl-c1">VK_QUOTE</span><span class="pl-k">:</span><span class="pl-c1">222</span>,<span class="pl-c1">VK_META</span><span class="pl-k">:</span><span class="pl-c1">224</span>,<span class="pl-c1">VK_ALTGR</span><span class="pl-k">:</span><span class="pl-c1">225</span>,<span class="pl-c1">VK_WIN</span><span class="pl-k">:</span><span class="pl-c1">91</span>,<span class="pl-c1">VK_KANA</span><span class="pl-k">:</span><span class="pl-c1">21</span>,<span class="pl-c1">VK_HANGUL</span><span class="pl-k">:</span><span class="pl-c1">21</span>,<span class="pl-c1">VK_EISU</span><span class="pl-k">:</span><span class="pl-c1">22</span>,<span class="pl-c1">VK_JUNJA</span><span class="pl-k">:</span><span class="pl-c1">23</span>,<span class="pl-c1">VK_FINAL</span><span class="pl-k">:</span><span class="pl-c1">24</span>,<span class="pl-c1">VK_HANJA</span><span class="pl-k">:</span><span class="pl-c1">25</span>,<span class="pl-c1">VK_KANJI</span><span class="pl-k">:</span><span class="pl-c1">25</span>,<span class="pl-c1">VK_CONVERT</span><span class="pl-k">:</span><span class="pl-c1">28</span>,<span class="pl-c1">VK_NONCONVERT</span><span class="pl-k">:</span><span class="pl-c1">29</span>,<span class="pl-c1">VK_ACCEPT</span><span class="pl-k">:</span><span class="pl-c1">30</span>,<span class="pl-c1">VK_MODECHANGE</span><span class="pl-k">:</span><span class="pl-c1">31</span>,<span class="pl-c1">VK_SELECT</span><span class="pl-k">:</span><span class="pl-c1">41</span>,<span class="pl-c1">VK_PRINT</span><span class="pl-k">:</span><span class="pl-c1">42</span>,<span class="pl-c1">VK_EXECUTE</span><span class="pl-k">:</span><span class="pl-c1">43</span>,<span class="pl-c1">VK_SLEEP</span><span class="pl-k">:</span><span class="pl-c1">95</span>,<span class="pl-c1">Text</span><span class="pl-k">:</span>{<span class="pl-c1">RE_COLORS</span><span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>%(<span class="pl-c1">[bc]</span>){(<span class="pl-c1">[<span class="pl-k">^</span>}]</span><span class="pl-k">*</span>)}<span class="pl-pds">/</span>g</span>,<span class="pl-c1">TYPE_TEXT</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-c1">TYPE_NEWLINE</span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-c1">TYPE_FG</span><span class="pl-k">:</span><span class="pl-c1">2</span>,<span class="pl-c1">TYPE_BG</span><span class="pl-k">:</span><span class="pl-c1">3</span>,<span class="pl-en">measure</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">1</span>},e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">tokenize</span>(a,c),f<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span>e[b];<span class="pl-k">switch</span>(<span class="pl-smi">l</span>.<span class="pl-c1">type</span>){<span class="pl-k">case</span> <span class="pl-c1">this</span>.<span class="pl-c1">TYPE_TEXT</span>:f<span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">l</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">this</span>.<span class="pl-c1">TYPE_NEWLINE</span>:<span class="pl-smi">d</span>.<span class="pl-c1">height</span><span class="pl-k">++</span>,<span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">d</span>.<span class="pl-c1">width</span>,f),f<span class="pl-k">=</span><span class="pl-c1">0</span>}}<span class="pl-smi">d</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">d</span>.<span class="pl-c1">width</span>,f);<span class="pl-k">return</span> d},<span class="pl-en">tokenize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-c1">this</span>.<span class="pl-c1">RE_COLORS</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">f</span>,<span class="pl-smi">h</span>,<span class="pl-smi">m</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(e,m);<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>({type<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span>,value<span class="pl-k">:</span>g});<span class="pl-smi">d</span>.<span class="pl-c1">push</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>f<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_FG</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_BG</span>,value<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-en">trim</span>()});e<span class="pl-k">=</span>m<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>});<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(e);<span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>({type<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span>,value<span class="pl-k">:</span>f});<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">_breakLines</span>(d,c)},<span class="pl-en">_breakLines</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){c<span class="pl-k">||</span>(c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Infinity</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> g<span class="pl-k">=</span>a[d];<span class="pl-smi">g</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_NEWLINE</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-c1">type</span><span class="pl-k">!=</span><span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span>)d<span class="pl-k">++</span>;<span class="pl-k">else</span>{<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">==</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>);)<span class="pl-smi">g</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>);<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>l){<span class="pl-smi">g</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_breakInsideToken</span>(a,d,l,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>l[<span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];)<span class="pl-smi">l</span>.<span class="pl-c1">pop</span>();<span class="pl-smi">g</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span>){<span class="pl-k">if</span>(e<span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span>c){<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;;){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>,l<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>h)<span class="pl-k">break</span>;<span class="pl-k">if</span>(e<span class="pl-k">+</span>h<span class="pl-k">&gt;</span>c)<span class="pl-k">break</span>;l<span class="pl-k">=</span>h}<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>l<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_breakInsideToken</span>(a,</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">d,l,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>f<span class="pl-k">?</span>(g<span class="pl-k">=</span>a[f],d<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),<span class="pl-smi">g</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_breakInsideToken</span>(a,f,d,<span class="pl-k">!</span><span class="pl-c1">0</span>),d<span class="pl-k">=</span>f)<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_breakInsideToken</span>(a,d,c<span class="pl-k">-</span>e,<span class="pl-k">!</span><span class="pl-c1">1</span>)}<span class="pl-k">else</span> e<span class="pl-k">+=</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span>,<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-smi">g</span>.<span class="pl-c1">value</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>d);d<span class="pl-k">++</span>}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">1</span>)}}<span class="pl-smi">a</span>.<span class="pl-c1">push</span>({type<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_NEWLINE</span>});e<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)<span class="pl-k">switch</span>(g<span class="pl-k">=</span>a[d],<span class="pl-smi">g</span>.<span class="pl-c1">type</span>){<span class="pl-k">case</span> <span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span>:e<span class="pl-k">=</span>g;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_NEWLINE</span>:<span class="pl-k">if</span>(e){<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">value</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>l[<span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];)<span class="pl-smi">l</span>.<span class="pl-c1">pop</span>();<span class="pl-smi">e</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}e<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-smi">a</span>.<span class="pl-c1">pop</span>();<span class="pl-k">return</span> a},<span class="pl-en">_breakInsideToken</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>{type<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_NEWLINE</span>};e<span class="pl-k">=</span>{type<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span>,value<span class="pl-k">:</span>a[c].<span class="pl-c1">value</span>.<span class="pl-c1">substring</span>(d<span class="pl-k">+</span>(e<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>))};<span class="pl-smi">a</span>.<span class="pl-c1">splice</span>(c<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,f,e);<span class="pl-k">return</span> a[c].<span class="pl-c1">value</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,d)}}};<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">random</span><span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">random</span><span class="pl-k">||</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">this</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">length</span>)]<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">randomize</span><span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">randomize</span><span class="pl-k">||</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">slice</span>();<span class="pl-smi">c</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">c</span>.<span class="pl-en">random</span>());<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-smi">c</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">1</span>)[<span class="pl-c1">0</span>])}<span class="pl-k">return</span> a};<span class="pl-c1">Number</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">mod</span><span class="pl-k">=</span><span class="pl-c1">Number</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">mod</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(<span class="pl-c1">this</span><span class="pl-k">%</span>a<span class="pl-k">+</span>a)<span class="pl-k">%</span>a};<span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">capitalize</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">capitalize</span><span class="pl-k">||</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>).<span class="pl-c1">toUpperCase</span>()<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>)};<span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">lpad</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">lpad</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">2</span>,f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>e<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">length</span>;)f<span class="pl-k">+=</span>d;f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,e<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">length</span>);<span class="pl-k">return</span> f<span class="pl-k">+</span><span class="pl-c1">this</span>};<span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">rpad</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">rpad</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">2</span>,f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>e<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">length</span>;)f<span class="pl-k">+=</span>d;f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,e<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">length</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span><span class="pl-k">+</span>f};<span class="pl-c1">String</span>.<span class="pl-smi">format</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-smi">format</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-smi">format</span>.<span class="pl-smi">map</span>,d<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%(?:(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span>)<span class="pl-k">|</span>(?:{(<span class="pl-c1">[<span class="pl-k">^</span>}]</span><span class="pl-k">+</span>)}))<span class="pl-pds">/</span>gi</span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">b</span>,<span class="pl-smi">l</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(l<span class="pl-k">-</span><span class="pl-c1">1</span>))<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> e;b<span class="pl-k">=</span>(f<span class="pl-k">||</span>b).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">shift</span>();l<span class="pl-k">=</span>c[<span class="pl-smi">f</span>.<span class="pl-c1">toLowerCase</span>()];<span class="pl-k">if</span>(<span class="pl-k">!</span>l)<span class="pl-k">return</span> e;e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">shift</span>();e<span class="pl-k">=</span>e[l].<span class="pl-c1">apply</span>(e,b);f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>);f<span class="pl-k">!=</span><span class="pl-smi">f</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">capitalize</span>());<span class="pl-k">return</span> e})};<span class="pl-c1">String</span>.<span class="pl-smi">format</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-smi">format</span>.<span class="pl-smi">map</span><span class="pl-k">||</span>{s<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>toString<span class="pl-pds">&quot;</span></span>};<span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">format</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">format</span><span class="pl-k">||</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>);</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">unshift</span>(<span class="pl-c1">this</span>);<span class="pl-k">return</span> <span class="pl-c1">String</span>.<span class="pl-smi">format</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">String</span>,a)};<span class="pl-c1">Object</span>.<span class="pl-smi">create</span><span class="pl-k">||</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> <span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-smi">c</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">c</span>});<span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">extend</span><span class="pl-k">=</span><span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">extend</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">this</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">window</span>.<span class="pl-smi">requestAnimationFrame</span><span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">requestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">mozRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">webkitRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">oRequestAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">msRequestAnimationFrame</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">setTimeout</span>(a,<span class="pl-c1">1E3</span><span class="pl-k">/</span><span class="pl-c1">60</span>)},<span class="pl-c1">window</span>.<span class="pl-smi">cancelAnimationFrame</span><span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">cancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">mozCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">webkitCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">oCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-c1">window</span>.<span class="pl-smi">msCancelAnimationFrame</span><span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">clearTimeout</span>(a)});<span class="pl-smi">b</span>.<span class="pl-en">Display</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_context</span><span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">_data</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_backend</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">DEFAULT_WIDTH</span>,height<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">DEFAULT_HEIGHT</span>,transpose<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,layout<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-c1">15</span>,</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line">spacing<span class="pl-k">:</span><span class="pl-c1">1</span>,border<span class="pl-k">:</span><span class="pl-c1">0</span>,forceSquareRatio<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,fontFamily<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>monospace<span class="pl-pds">&quot;</span></span>,fontStyle<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,fg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ccc<span class="pl-pds">&quot;</span></span>,bg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#000<span class="pl-pds">&quot;</span></span>,tileWidth<span class="pl-k">:</span><span class="pl-c1">32</span>,tileHeight<span class="pl-k">:</span><span class="pl-c1">32</span>,tileMap<span class="pl-k">:</span>{},tileSet<span class="pl-k">:</span><span class="pl-c1">null</span>,tileColorize<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,termColor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>xterm<span class="pl-pds">&quot;</span></span>},d;<span class="pl-k">for</span>(d <span class="pl-k">in</span> a)c[d]<span class="pl-k">=</span>a[d];<span class="pl-c1">this</span>.<span class="pl-en">setOptions</span>(c);<span class="pl-c1">this</span>.<span class="pl-c1">DEBUG</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">DEBUG</span>.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_tick</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_tick</span>.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>);<span class="pl-en">requestAnimationFrame</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_tick</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">DEBUG</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">bg</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">fg</span>];<span class="pl-c1">this</span>.<span class="pl-en">draw</span>(a,c,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,e[d<span class="pl-k">%</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>])};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_data</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setOptions</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> a)<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[c]<span class="pl-k">=</span>a[c];<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">fontSize</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">fontFamily</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">spacing</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">layout</span>)<span class="pl-smi">a</span>.<span class="pl-smi">layout</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_backend</span><span class="pl-k">=</span><span class="pl-k">new</span> (<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>[<span class="pl-smi">a</span>.<span class="pl-smi">layout</span>.<span class="pl-en">capitalize</span>()])(<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>)),a<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">fontStyle</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">fontStyle</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">fontSize</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">fontFamily</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span>a,<span class="pl-c1">this</span>.<span class="pl-smi">_backend</span>.<span class="pl-en">compute</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span>a,<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-c1">textAlign</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">textBaseline</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getOptions</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_options</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getContainer</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_backend</span>.<span class="pl-en">computeSize</span>(a,c,<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeFontSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_backend</span>.<span class="pl-en">computeFontSize</span>(a,c,<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">eventToPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">touches</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>[<span class="pl-c1">0</span>].<span class="pl-smi">clientX</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>[<span class="pl-c1">0</span>].<span class="pl-smi">clientY</span>}<span class="pl-k">else</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clientX</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clientY</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">getBoundingClientRect</span>();c<span class="pl-k">-=</span><span class="pl-smi">d</span>.<span class="pl-c1">left</span>;a<span class="pl-k">-=</span><span class="pl-smi">d</span>.<span class="pl-c1">top</span>;c<span class="pl-k">*=</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-smi">clientWidth</span>;a<span class="pl-k">*=</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-smi">clientHeight</span>;<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>c<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span>c<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span><span class="pl-k">||</span>a<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span><span class="pl-k">?</span>[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">_backend</span>.<span class="pl-en">eventToPosition</span>(c,a)};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){e<span class="pl-k">||</span>(e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">fg</span>);f<span class="pl-k">||</span>(f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">bg</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_data</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c]<span class="pl-k">=</span>[a,c,d,e,f];<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">=</span>{}),<span class="pl-c1">this</span>.<span class="pl-smi">_dirty</span>[a<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c]<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">drawText</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">null</span>,g<span class="pl-k">=</span><span class="pl-c1">null</span>,l<span class="pl-k">=</span>a,h<span class="pl-k">=</span><span class="pl-c1">1</span>;e<span class="pl-k">||</span>(e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>a);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-en">tokenize</span>(d,e);<span class="pl-smi">d</span>.<span class="pl-c1">length</span>;)<span class="pl-k">switch</span>(e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">shift</span>(),<span class="pl-smi">e</span>.<span class="pl-c1">type</span>){<span class="pl-k">case</span> <span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_TEXT</span>:<span class="pl-k">for</span>(<span class="pl-k">var</span> m,n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,p,r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,q<span class="pl-k">=</span><span class="pl-c1">0</span>;q<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span>;q<span class="pl-k">++</span>){m<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">value</span>.<span class="pl-c1">charCodeAt</span>(q);<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">value</span>.<span class="pl-c1">charAt</span>(q);p<span class="pl-k">=</span><span class="pl-c1">65280</span><span class="pl-k">&lt;</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-c1">65377</span><span class="pl-k">&gt;</span>m<span class="pl-k">||</span><span class="pl-c1">65500</span><span class="pl-k">&lt;</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-c1">65512</span><span class="pl-k">&gt;</span>m<span class="pl-k">||</span><span class="pl-c1">65518</span><span class="pl-k">&lt;</span>m;m<span class="pl-k">=</span><span class="pl-c1">32</span><span class="pl-k">==</span><span class="pl-smi">t</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">||</span><span class="pl-c1">12288</span><span class="pl-k">==</span><span class="pl-smi">t</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>);<span class="pl-k">!</span>r<span class="pl-k">||</span>p<span class="pl-k">||</span>m<span class="pl-k">||</span>l<span class="pl-k">++</span>;p<span class="pl-k">&amp;&amp;!</span>n<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">++</span>;<span class="pl-c1">this</span>.<span class="pl-en">draw</span>(l<span class="pl-k">++</span>,c,t,f,g);n<span class="pl-k">=</span>m;r<span class="pl-k">=</span>p}<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_FG</span>:f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">value</span><span class="pl-k">||</span><span class="pl-c1">null</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_BG</span>:g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-c1">value</span><span class="pl-k">||</span><span class="pl-c1">null</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-smi">b</span>.<span class="pl-smi">Text</span>.<span class="pl-c1">TYPE_NEWLINE</span>:l<span class="pl-k">=</span>a,c<span class="pl-k">++</span>,h<span class="pl-k">++</span>}<span class="pl-k">return</span> h};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_tick</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">requestAnimationFrame</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_tick</span>);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_dirty</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">_dirty</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">bg</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fillRect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_data</span>)<span class="pl-c1">this</span>.<span class="pl-en">_draw</span>(a,<span class="pl-k">!</span><span class="pl-c1">1</span>)}<span class="pl-k">else</span> <span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_dirty</span>)<span class="pl-c1">this</span>.<span class="pl-en">_draw</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_dirty</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_data</span>[a];d[<span class="pl-c1">4</span>]<span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">bg</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_backend</span>.<span class="pl-en">draw</span>(d,</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line">c)};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-en">Backend</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_context</span><span class="pl-k">=</span>a};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeFontSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">eventToPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-en">Rect</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_canvasCache</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{}};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-smi">cache</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_canvasCache</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>a;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">measureText</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>W<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">width</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-smi">a</span>.<span class="pl-smi">spacing</span><span class="pl-k">*</span>c);<span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-smi">a</span>.<span class="pl-smi">spacing</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">fontSize</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">forceSquareRatio</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span>));<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-c1">constructor</span>.<span class="pl-smi">cache</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">_drawWithCache</span>(a,</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line">c)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">_drawNoCache</span>(a,c)};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_drawWithCache</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">2</span>],b<span class="pl-k">=</span>a[<span class="pl-c1">3</span>],l<span class="pl-k">=</span>a[<span class="pl-c1">4</span>],h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span>b<span class="pl-k">+</span>l;<span class="pl-k">if</span>(h <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_canvasCache</span>)<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_canvasCache</span>[h];<span class="pl-k">else</span>{<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">border</span>;m<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">m</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>;<span class="pl-smi">m</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span>;<span class="pl-smi">p</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>l;<span class="pl-smi">p</span>.<span class="pl-en">fillRect</span>(n,n,<span class="pl-smi">m</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>n,<span class="pl-smi">m</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>n);<span class="pl-k">if</span>(f)<span class="pl-k">for</span>(<span class="pl-smi">p</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>b,<span class="pl-smi">p</span>.<span class="pl-smi">font</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span>,<span class="pl-smi">p</span>.<span class="pl-c1">textAlign</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">p</span>.<span class="pl-smi">textBaseline</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(f),b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-smi">p</span>.<span class="pl-en">fillText</span>(f[b],</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">/</span><span class="pl-c1">2</span>));<span class="pl-c1">this</span>.<span class="pl-smi">_canvasCache</span>[h]<span class="pl-k">=</span>m}<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">drawImage</span>(m,d<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>,e<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_drawNoCache</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">2</span>],b<span class="pl-k">=</span>a[<span class="pl-c1">3</span>],l<span class="pl-k">=</span>a[<span class="pl-c1">4</span>];<span class="pl-k">if</span>(c){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">border</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>l;<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fillRect</span>(d<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">+</span>h,e<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">+</span>h,<span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">-</span>h,<span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">-</span>h)}<span class="pl-k">if</span>(f)<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>b,f<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(f),b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fillText</span>(f[b],(d<span class="pl-k">+</span><span class="pl-c1">.5</span>)<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>((e<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">.5</span>)<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span>))};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(c<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span>)]};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeFontSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">width</span>),e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(c<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">height</span>),f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>100px <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">fontFamily</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">measureText</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>W<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">width</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span>f;d<span class="pl-k">=</span>b<span class="pl-k">/</span><span class="pl-c1">100</span><span class="pl-k">*</span>e<span class="pl-k">/</span>d;<span class="pl-c1">1</span><span class="pl-k">&lt;</span>d<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(e<span class="pl-k">/</span>d));<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(e<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">spacing</span>)};</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">eventToPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(c<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span>)]};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-en">Hex</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">_hexSize</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{}};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Backend</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>a;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">measureText</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>W<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">width</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_hexSize</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">a</span>.<span class="pl-smi">spacing</span><span class="pl-k">*</span>(<span class="pl-smi">a</span>.<span class="pl-c1">fontSize</span><span class="pl-k">+</span>c<span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>))<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_hexSize</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>)<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">=</span><span class="pl-c1">1.5</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_hexSize</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">transpose</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>[d]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>((<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>[c]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>((<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_hexSize</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[<span class="pl-c1">2</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">3</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">4</span>],b<span class="pl-k">=</span>[(a[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>,a[<span class="pl-c1">1</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_hexSize</span>];<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">transpose</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">reverse</span>();c<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>f,<span class="pl-c1">this</span>.<span class="pl-en">_fill</span>(b[<span class="pl-c1">0</span>],b[<span class="pl-c1">1</span>]));<span class="pl-k">if</span>(d)<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>e,d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line">[].<span class="pl-c1">concat</span>(d),e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fillText</span>(d[e],b[<span class="pl-c1">0</span>],<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(b[<span class="pl-c1">1</span>]))};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">transpose</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span>c,c<span class="pl-k">=</span>a<span class="pl-k">-</span>c,a<span class="pl-k">-=</span>c);<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>)<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((c<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_hexSize</span>)<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingY</span><span class="pl-k">+</span><span class="pl-c1">1</span>)]};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeFontSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">transpose</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span>c,c<span class="pl-k">=</span>a<span class="pl-k">-</span>c,a<span class="pl-k">-=</span>c);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>a<span class="pl-k">/</span>((<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>))<span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">1.5</span><span class="pl-k">*</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>))),e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>100px <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">fontFamily</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">measureText</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>W<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">width</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">font</span><span class="pl-k">=</span>e;d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(d)<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">/</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">spacing</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>f<span class="pl-k">/</span><span class="pl-c1">100</span><span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>))))<span class="pl-k">-</span><span class="pl-c1">1</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">eventToPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">transpose</span>){a<span class="pl-k">+=</span>c;c<span class="pl-k">=</span>a<span class="pl-k">-</span>c;a<span class="pl-k">-=</span>c;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span>}<span class="pl-k">else</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span>;c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(c<span class="pl-k">/</span>(d<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">height</span>));<span class="pl-smi">c</span>.<span class="pl-en">mod</span>(<span class="pl-c1">2</span>)<span class="pl-k">?</span>(a<span class="pl-k">-=</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>,a<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>)))<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span>));</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span>[a,c]};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Hex</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_fill</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_hexSize</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">border</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">beginPath</span>();<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">transpose</span><span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-c1">moveTo</span>(a<span class="pl-k">-</span>d<span class="pl-k">+</span>e,c),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">-</span>d<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>e,c<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">-</span>e),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>e,c<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">-</span>e),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">+</span>d<span class="pl-k">-</span>e,c),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>e,c<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">+</span>e),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">-</span>d<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>e,c<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">+</span>e),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">-</span>d<span class="pl-k">+</span>e,c))<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-c1">moveTo</span>(a,c<span class="pl-k">-</span>d<span class="pl-k">+</span>e),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line">e,c<span class="pl-k">-</span>d<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>e),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">-</span>e,c<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>e),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a,c<span class="pl-k">+</span>d<span class="pl-k">-</span>e),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">+</span>e,c<span class="pl-k">+</span>d<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span>e),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_spacingX</span><span class="pl-k">+</span>e,c<span class="pl-k">-</span>d<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>e),<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">lineTo</span>(a,c<span class="pl-k">-</span>d<span class="pl-k">+</span>e));<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fill</span>()};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-en">Tile</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_colorCanvas</span><span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Rect</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">tileWidth</span>;</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">canvas</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">tileHeight</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_colorCanvas</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tileWidth</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_colorCanvas</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tileHeight</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">draw</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">2</span>],b<span class="pl-k">=</span>a[<span class="pl-c1">3</span>],l<span class="pl-k">=</span>a[<span class="pl-c1">4</span>],h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileWidth</span>,m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileHeight</span>;c<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileColorize</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">clearRect</span>(d<span class="pl-k">*</span>h,e<span class="pl-k">*</span>m,h,m)<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>l,<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">fillRect</span>(d<span class="pl-k">*</span>h,e<span class="pl-k">*</span>m,h,m)));<span class="pl-k">if</span>(f)<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span>[].<span class="pl-c1">concat</span>(f),n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>){<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileMap</span>[f[n]];<span class="pl-k">if</span>(<span class="pl-k">!</span>p)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Char &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">f[n]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; not found in tileMap<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileColorize</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_colorCanvas</span>,q<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">clearRect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,h,m);<span class="pl-smi">q</span>.<span class="pl-en">drawImage</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileSet</span>,p[<span class="pl-c1">0</span>],p[<span class="pl-c1">1</span>],h,m,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,h,m);<span class="pl-s"><span class="pl-pds">&quot;</span>transparent<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">q</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>b,<span class="pl-smi">q</span>.<span class="pl-smi">globalCompositeOperation</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>source-atop<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">q</span>.<span class="pl-en">fillRect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,h,m));<span class="pl-s"><span class="pl-pds">&quot;</span>transparent<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span>l<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">q</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span>l,<span class="pl-smi">q</span>.<span class="pl-smi">globalCompositeOperation</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>destination-over<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">q</span>.<span class="pl-en">fillRect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,h,m));<span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">drawImage</span>(r,d<span class="pl-k">*</span>h,e<span class="pl-k">*</span>m,h,m)}<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-smi">_context</span>.<span class="pl-en">drawImage</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileSet</span>,p[<span class="pl-c1">0</span>],p[<span class="pl-c1">1</span>],h,m,d<span class="pl-k">*</span>h,e<span class="pl-k">*</span>m,h,m)}};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">computeSize</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileWidth</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(c<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileHeight</span>)]};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">computeFontSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">width</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(c<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-c1">height</span>)]};<span class="pl-smi">b</span>.<span class="pl-smi">Display</span>.<span class="pl-smi">Tile</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">eventToPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileWidth</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(c<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">tileHeight</span>)]};<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span><span class="pl-k">=</span>{<span class="pl-en">getSeed</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_seed</span>},<span class="pl-en">setSeed</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_seed</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">/</span>a<span class="pl-k">:</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_s0</span><span class="pl-k">=</span>(a<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>)<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_frac</span>;a<span class="pl-k">=</span><span class="pl-c1">69069</span><span class="pl-k">*</span>a<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;&gt;&gt;</span></td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_s1</span><span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_frac</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_s2</span><span class="pl-k">=</span>(<span class="pl-c1">69069</span><span class="pl-k">*</span>a<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>)<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_frac</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_c</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getUniform</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">2091639</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_s0</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_c</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_frac</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_s0</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_s1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_s1</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_s2</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_c</span><span class="pl-k">=</span>a<span class="pl-k">|</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_s2</span><span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_c</span>},<span class="pl-en">getUniformInt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(a,c),e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(a,c);<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>(d<span class="pl-k">-</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>))<span class="pl-k">+</span>e},<span class="pl-en">getNormal</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">do</span>{<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>;e<span class="pl-k">=</span>d<span class="pl-k">*</span>d<span class="pl-k">+</span>e<span class="pl-k">*</span>e}<span class="pl-k">while</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span>e<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">==</span>e);<span class="pl-k">return</span>(a<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">log</span>(e)<span class="pl-k">/</span>e)<span class="pl-k">*</span>(c<span class="pl-k">||</span><span class="pl-c1">1</span>)},<span class="pl-en">getPercentage</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">100</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-en">getUniform</span>())},<span class="pl-en">getWeightedValue</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d;<span class="pl-k">for</span>(d <span class="pl-k">in</span> a)c<span class="pl-k">+=</span>a[d];<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>c,e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d <span class="pl-k">in</span> a)<span class="pl-k">if</span>(e<span class="pl-k">+=</span>a[d],c<span class="pl-k">&lt;</span>e)<span class="pl-k">break</span>;<span class="pl-k">return</span> d},<span class="pl-en">getState</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_s0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_s1</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_s2</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_c</span>]},<span class="pl-en">setState</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_s0</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-smi">_s1</span><span class="pl-k">=</span>a[<span class="pl-c1">1</span>];<span class="pl-c1">this</span>.<span class="pl-smi">_s2</span><span class="pl-k">=</span>a[<span class="pl-c1">2</span>];<span class="pl-c1">this</span>.<span class="pl-smi">_c</span><span class="pl-k">=</span>a[<span class="pl-c1">3</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-en">setState</span>(<span class="pl-c1">this</span>.<span class="pl-en">getState</span>());<span class="pl-k">return</span> a},_s0<span class="pl-k">:</span><span class="pl-c1">0</span>,_s1<span class="pl-k">:</span><span class="pl-c1">0</span>,_s2<span class="pl-k">:</span><span class="pl-c1">0</span>,_c<span class="pl-k">:</span><span class="pl-c1">0</span>,_frac<span class="pl-k">:</span><span class="pl-c1">2.3283064365386963E-10</span>};<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">setSeed</span>(<span class="pl-c1">Date</span>.<span class="pl-en">now</span>());<span class="pl-smi">b</span>.<span class="pl-en">StringGenerator</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line">{words<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,order<span class="pl-k">:</span><span class="pl-c1">3</span>,prior<span class="pl-k">:</span><span class="pl-c1">.001</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> a)<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[c]<span class="pl-k">=</span>a[c];<span class="pl-c1">this</span>.<span class="pl-smi">_suffix</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_boundary</span><span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_prefix</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span>;a<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_prefix</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_boundary</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_priorValues</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_priorValues</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_boundary</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">prior</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_data</span><span class="pl-k">=</span>{}};<span class="pl-smi">b</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_data</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_priorValues</span><span class="pl-k">=</span>{}};<span class="pl-smi">b</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">generate</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>[<span class="pl-c1">this</span>.<span class="pl-en">_sample</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_prefix</span>)];a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-smi">_boundary</span>;)<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-en">_sample</span>(a));</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">_join</span>(<span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>))};<span class="pl-smi">b</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">observe</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_split</span>(a);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_priorValues</span>[a[c]]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">prior</span>;a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_prefix</span>.<span class="pl-c1">concat</span>(a).<span class="pl-c1">concat</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_suffix</span>);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(c<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span>,c),e<span class="pl-k">=</span>a[c],f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">slice</span>(f);<span class="pl-c1">this</span>.<span class="pl-en">_observeEvent</span>(b,e)}};<span class="pl-smi">b</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getStats</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">0</span>,d;<span class="pl-k">for</span>(d <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_priorValues</span>)c<span class="pl-k">++</span>;c<span class="pl-k">--</span>;<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>distinct samples: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c);<span class="pl-k">var</span> e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_data</span>){c<span class="pl-k">++</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> f <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_data</span>[d])e<span class="pl-k">++</span>}<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dictionary size (contexts): <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c);<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dictionary size (events): <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">b</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_split</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">words</span><span class="pl-k">?</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">b</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_join</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">words</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">b</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_observeEvent</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_join</span>(a);d <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_data</span><span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_data</span>[d]<span class="pl-k">=</span>{});d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_data</span>[d];c <span class="pl-k">in</span> d<span class="pl-k">||</span>(d[c]<span class="pl-k">=</span><span class="pl-c1">0</span>);d[c]<span class="pl-k">++</span>};<span class="pl-smi">b</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">_sample</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_backoff</span>(a);a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_join</span>(a);a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_data</span>[a];<span class="pl-k">var</span> c<span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">prior</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_priorValues</span>)c[d]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_priorValues</span>[d];<span class="pl-k">for</span>(d <span class="pl-k">in</span> a)c[d]<span class="pl-k">+=</span>a[d]}<span class="pl-k">else</span> c<span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getWeightedValue</span>(c)};<span class="pl-smi">b</span>.<span class="pl-smi">StringGenerator</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_backoff</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span><span class="pl-k">?</span>a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_prefix</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">order</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>).<span class="pl-c1">concat</span>(a));<span class="pl-k">!</span>(<span class="pl-c1">this</span>.<span class="pl-en">_join</span>(a)<span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_data</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;)a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>);<span class="pl-k">return</span> a};<span class="pl-smi">b</span>.<span class="pl-smi">EventQueue</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_time</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_events</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_eventTimes</span><span class="pl-k">=</span>[]};<span class="pl-smi">b</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getTime</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_time</span>};<span class="pl-smi">b</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_events</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_eventTimes</span><span class="pl-k">=</span>[];<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">length</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_eventTimes</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_eventTimes</span>[e]<span class="pl-k">&gt;</span>c){d<span class="pl-k">=</span>e;<span class="pl-k">break</span>}<span class="pl-c1">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">0</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">_eventTimes</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">0</span>,c)};<span class="pl-smi">b</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">get</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_eventTimes</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>)[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>a){<span class="pl-c1">this</span>.<span class="pl-smi">_time</span><span class="pl-k">+=</span>a;<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_eventTimes</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_eventTimes</span>[c]<span class="pl-k">-=</span>a}<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)[<span class="pl-c1">0</span>]};<span class="pl-smi">b</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getEventTime</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">indexOf</span>(a);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>a)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_eventTimes</span>[a]};<span class="pl-smi">b</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">remove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">indexOf</span>(a);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">_remove</span>(a);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">b</span>.<span class="pl-smi">EventQueue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_remove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_events</span>.<span class="pl-c1">splice</span>(a,<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_eventTimes</span>.<span class="pl-c1">splice</span>(a,<span class="pl-c1">1</span>)};<span class="pl-smi">b</span>.<span class="pl-en">Scheduler</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_queue</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">b.EventQueue</span>;</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_repeat</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">=</span><span class="pl-c1">null</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getTime</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">getTime</span>()};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">push</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getTimeOf</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-en">getEventTime</span>(a)};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">clear</span>();<span class="pl-c1">this</span>.<span class="pl-smi">_repeat</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">remove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">remove</span>(a),d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">indexOf</span>(a);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-k">return</span> c};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">next</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">get</span>()};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-en">Simple</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Simple</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Simple</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(a,<span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">add</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c)};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Simple</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">next</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">indexOf</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_current</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_current</span>,<span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">next</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>)};</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-en">Speed</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Speed</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Speed</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(a,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-en">getSpeed</span>());<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">add</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c)};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Speed</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">next</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">indexOf</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_current</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_current</span>,<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">_current</span>.<span class="pl-en">getSpeed</span>());<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">next</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-en">Action</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_defaultDuration</span><span class="pl-k">=</span><span class="pl-c1">1</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(a,d<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">_defaultDuration</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">add</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c)};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_defaultDuration</span>;<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">clear</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">remove</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_defaultDuration</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">remove</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a)};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">next</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-smi">_repeat</span>.<span class="pl-c1">indexOf</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_current</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_queue</span>.<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_current</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">_defaultDuration</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_defaultDuration</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">next</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Scheduler</span>.<span class="pl-smi">Action</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setDuration</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_current</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_duration</span><span class="pl-k">=</span>a);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-en">Engine</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_scheduler</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_lock</span><span class="pl-k">=</span><span class="pl-c1">1</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Engine</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">start</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">unlock</span>()};<span class="pl-smi">b</span>.<span class="pl-smi">Engine</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">lock</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_lock</span><span class="pl-k">++</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Engine</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">unlock</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">_lock</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot unlock unlocked engine<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_lock</span><span class="pl-k">--</span>;<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">_lock</span>;){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_scheduler</span>.<span class="pl-c1">next</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">lock</span>();(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">act</span>())<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">then</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">lock</span>(),<span class="pl-smi">a</span>.<span class="pl-en">then</span>(<span class="pl-c1">this</span>.<span class="pl-smi">unlock</span>.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>)))}<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-en">Map</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">DEFAULT_WIDTH</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">DEFAULT_HEIGHT</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_fillMap</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>;d<span class="pl-k">++</span>){<span class="pl-smi">c</span>.<span class="pl-c1">push</span>([]);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;e<span class="pl-k">++</span>)c[d].<span class="pl-c1">push</span>(a)}<span class="pl-k">return</span> c};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Arena</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Arena</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Arena</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">-</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;=</span>c;e<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;=</span>d;f<span class="pl-k">++</span>)<span class="pl-en">a</span>(e,f,e<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&lt;</span>d<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-en">DividedMaze</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c);<span class="pl-c1">this</span>.<span class="pl-smi">_stack</span><span class="pl-k">=</span>[]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">DividedMaze</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">DividedMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>.<span class="pl-c1">push</span>([]);<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>d;f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[e].<span class="pl-c1">push</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>e<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">==</span>f<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">==</span>c<span class="pl-k">||</span>f<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">==</span>d<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>)}<span class="pl-c1">this</span>.<span class="pl-smi">_stack</span><span class="pl-k">=</span>[[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,c<span class="pl-k">-</span><span class="pl-c1">2</span>,d<span class="pl-k">-</span><span class="pl-c1">2</span>]];<span class="pl-c1">this</span>.<span class="pl-en">_process</span>();<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>d;f<span class="pl-k">++</span>)<span class="pl-en">a</span>(e,f,<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[e][f]);<span class="pl-c1">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">DividedMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_process</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(;<span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">shift</span>();<span class="pl-c1">this</span>.<span class="pl-en">_partitionRoom</span>(a)}};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">DividedMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_partitionRoom</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c,d<span class="pl-k">=</span>[],e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>a[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>;f<span class="pl-k">&lt;</span>a[<span class="pl-c1">2</span>];f<span class="pl-k">++</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[f][a[<span class="pl-c1">3</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[f][a[<span class="pl-c1">1</span>]<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">||!</span>b<span class="pl-k">||</span>f<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(f)}<span class="pl-k">for</span>(f<span class="pl-k">=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>;f<span class="pl-k">&lt;</span>a[<span class="pl-c1">3</span>];f<span class="pl-k">++</span>)b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[a[<span class="pl-c1">2</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>][f],<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[a[<span class="pl-c1">0</span>]<span class="pl-k">-</span><span class="pl-c1">1</span>][f]<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span>b<span class="pl-k">||</span>f<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-c1">push</span>(f);<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>){d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">random</span>();e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">random</span>();<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[d][e]<span class="pl-k">=</span><span class="pl-c1">1</span>;b<span class="pl-k">=</span>[];c<span class="pl-k">=</span>[];<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c);<span class="pl-k">for</span>(f<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];f<span class="pl-k">&lt;</span>d;f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[f][e]<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">c</span>.<span class="pl-c1">push</span>([f,e]);c<span class="pl-k">=</span>[];<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c);<span class="pl-k">for</span>(f<span class="pl-k">=</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>;f<span class="pl-k">&lt;=</span>a[<span class="pl-c1">2</span>];f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[f][e]<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">c</span>.<span class="pl-c1">push</span>([f,e]);c<span class="pl-k">=</span>[];<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c);<span class="pl-k">for</span>(f<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];f<span class="pl-k">&lt;</span>e;f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[d][f]<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">c</span>.<span class="pl-c1">push</span>([d,f]);c<span class="pl-k">=</span>[];<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c);<span class="pl-k">for</span>(f<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>;f<span class="pl-k">&lt;=</span>a[<span class="pl-c1">3</span>];f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[d][f]<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">c</span>.<span class="pl-c1">push</span>([d,f]);<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">random</span>(),f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)c<span class="pl-k">=</span>b[f],c<span class="pl-k">!=</span>l<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">random</span>(),<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[c[<span class="pl-c1">0</span>]][c[<span class="pl-c1">1</span>]]<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">push</span>([a[<span class="pl-c1">0</span>],a[<span class="pl-c1">1</span>],d<span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">-</span><span class="pl-c1">1</span>]);<span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">push</span>([d<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>,a[<span class="pl-c1">1</span>],a[<span class="pl-c1">2</span>],e<span class="pl-k">-</span><span class="pl-c1">1</span>]);<span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">push</span>([a[<span class="pl-c1">0</span>],e<span class="pl-k">+</span><span class="pl-c1">1</span>,d<span class="pl-k">-</span><span class="pl-c1">1</span>,a[<span class="pl-c1">3</span>]]);<span class="pl-c1">this</span>.<span class="pl-smi">_stack</span>.<span class="pl-c1">push</span>([d<span class="pl-k">+</span><span class="pl-c1">1</span>,e<span class="pl-k">+</span><span class="pl-c1">1</span>,a[<span class="pl-c1">2</span>],a[<span class="pl-c1">3</span>]])}};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-en">IceyMaze</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c);<span class="pl-c1">this</span>.<span class="pl-smi">_regularity</span><span class="pl-k">=</span>d<span class="pl-k">||</span><span class="pl-c1">0</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">IceyMaze</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">IceyMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>),c<span class="pl-k">=</span>c<span class="pl-k">-</span>(c<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>),d<span class="pl-k">=</span>d<span class="pl-k">-</span>(d<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>),f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span>[[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]];<span class="pl-k">do</span>{<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>(c<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>(d<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>);f<span class="pl-k">||</span>(e[l][h]<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>e[l][h]){<span class="pl-c1">this</span>.<span class="pl-en">_randomize</span>(g);</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-k">do</span>{<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_regularity</span><span class="pl-k">+</span><span class="pl-c1">1</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">_randomize</span>(g);<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>n;n<span class="pl-k">++</span>){<span class="pl-k">var</span> p<span class="pl-k">=</span>l<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>g[n][<span class="pl-c1">0</span>];<span class="pl-k">var</span> r<span class="pl-k">=</span>h<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>g[n][<span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">_isFree</span>(e,p,r,c,d)){e[p][r]<span class="pl-k">=</span><span class="pl-c1">0</span>;e[l<span class="pl-k">+</span>g[n][<span class="pl-c1">0</span>]][h<span class="pl-k">+</span>g[n][<span class="pl-c1">1</span>]]<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">=</span>p;h<span class="pl-k">=</span>r;m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;f<span class="pl-k">++</span>;<span class="pl-k">break</span>}}}<span class="pl-k">while</span>(<span class="pl-k">!</span>m)}}<span class="pl-k">while</span>(f<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span>c<span class="pl-k">*</span>d<span class="pl-k">/</span><span class="pl-c1">4</span>);<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>;n<span class="pl-k">++</span>)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;c<span class="pl-k">++</span>)<span class="pl-en">a</span>(n,c,e[n][c]);<span class="pl-c1">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">IceyMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_randomize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)a[c][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>,a[c][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">switch</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>())){<span class="pl-k">case</span> <span class="pl-c1">0</span>:a[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;a[<span class="pl-c1">2</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">3</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:a[<span class="pl-c1">3</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">2</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;a[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:a[<span class="pl-c1">2</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">3</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;a[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span>:a[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,a[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>,a[<span class="pl-c1">3</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,a[<span class="pl-c1">2</span>][<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>}};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">IceyMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_isFree</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">&gt;</span>c<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>d<span class="pl-k">||</span>c<span class="pl-k">&gt;=</span>e<span class="pl-k">||</span>d<span class="pl-k">&gt;=</span>f<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>a[c][d]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-en">EllerMaze</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">EllerMaze</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">EllerMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c,d,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>),f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>((<span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">-</span><span class="pl-c1">2</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>),g<span class="pl-k">=</span>[],l<span class="pl-k">=</span>[],h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>f;h<span class="pl-k">++</span>)<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(h),</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">l</span>.<span class="pl-c1">push</span>(h);<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(f<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">1</span>;m<span class="pl-k">+</span><span class="pl-c1">3</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;m<span class="pl-k">+=</span><span class="pl-c1">2</span>)<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>f;h<span class="pl-k">++</span>)d<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>h<span class="pl-k">+</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span>m,e[d][c]<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">!=</span>g[h<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">.375</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">_addToList</span>(h,g,l),e[d<span class="pl-k">+</span><span class="pl-c1">1</span>][c]<span class="pl-k">=</span><span class="pl-c1">0</span>),h<span class="pl-k">!=</span>g[h]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">.375</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">_removeFromList</span>(h,g,l)<span class="pl-k">:</span>e[d][c<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>f;h<span class="pl-k">++</span>)d<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>h<span class="pl-k">+</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span>m,e[d][c]<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">!=</span>g[h<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">==</span>g[h]<span class="pl-k">||</span><span class="pl-c1">.375</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>())<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">_addToList</span>(h,g,l),e[d<span class="pl-k">+</span><span class="pl-c1">1</span>][c]<span class="pl-k">=</span><span class="pl-c1">0</span>),<span class="pl-c1">this</span>.<span class="pl-en">_removeFromList</span>(h,g,l);<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>;h<span class="pl-k">++</span>)<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;m<span class="pl-k">++</span>)<span class="pl-en">a</span>(h,m,e[h][m]);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">EllerMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">_removeFromList</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){d[c[a]]<span class="pl-k">=</span>d[a];c[d[a]]<span class="pl-k">=</span>c[a];d[a]<span class="pl-k">=</span>a;c[a]<span class="pl-k">=</span>a};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">EllerMaze</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_addToList</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){d[c[a<span class="pl-k">+</span><span class="pl-c1">1</span>]]<span class="pl-k">=</span>d[a];c[d[a]]<span class="pl-k">=</span>c[a<span class="pl-k">+</span><span class="pl-c1">1</span>];d[a]<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>;c[a<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>a};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Cellular</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c);<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{born<span class="pl-k">:</span>[<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>],survive<span class="pl-k">:</span>[<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>],topology<span class="pl-k">:</span><span class="pl-c1">8</span>};<span class="pl-c1">this</span>.<span class="pl-en">setOptions</span>(d);<span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span>];<span class="pl-c1">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">0</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">randomize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;d<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[c][d]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">&lt;</span>a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setOptions</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> a)<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[c]<span class="pl-k">=</span>a[c]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">set</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[a][c]<span class="pl-k">=</span>d};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">0</span>),d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">born</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">survive</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;f<span class="pl-k">++</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">1</span>,l<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">2</span>,l<span class="pl-k">=</span>f<span class="pl-k">%</span><span class="pl-c1">2</span>);<span class="pl-k">for</span>(;l<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>;l<span class="pl-k">+=</span>b){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[l][f],m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_getNeighbors</span>(l,f);h<span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-smi">e</span>.<span class="pl-c1">indexOf</span>(m)<span class="pl-k">?</span>c[l][f]<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>h<span class="pl-k">||</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(m)<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">(c[l][f]<span class="pl-k">=</span><span class="pl-c1">1</span>)}}<span class="pl-c1">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-en">serviceCallback</span>(a)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">serviceCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a)<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">2</span>,e<span class="pl-k">=</span>c<span class="pl-k">%</span><span class="pl-c1">2</span>);<span class="pl-k">for</span>(;e<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>;e<span class="pl-k">+=</span>d)<span class="pl-en">a</span>(e,c,<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[e][c])}};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getNeighbors</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>[e],b<span class="pl-k">=</span>a<span class="pl-k">+</span>f[<span class="pl-c1">0</span>],f<span class="pl-k">=</span>c<span class="pl-k">+</span>f[<span class="pl-c1">1</span>];<span class="pl-c1">0</span><span class="pl-k">&gt;</span>b<span class="pl-k">||</span>b<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>f<span class="pl-k">||</span>f<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">||</span>(d<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[b][f]<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>)}<span class="pl-k">return</span> d};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">connect</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){c<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">(c<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>{},g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>;g<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;l<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">_freeSpace</span>(g,l,c)){<span class="pl-k">var</span> h<span class="pl-k">=</span>[g,l];f[<span class="pl-c1">this</span>.<span class="pl-en">_pointKey</span>(h)]<span class="pl-k">=</span>h;<span class="pl-smi">e</span>.<span class="pl-c1">push</span>([g,l])}h<span class="pl-k">=</span>e[<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)];g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_pointKey</span>(h);e<span class="pl-k">=</span>{};e[g]<span class="pl-k">=</span>h;<span class="pl-k">delete</span> f[g];<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-en">_findConnected</span>(e,f,[h],<span class="pl-k">!</span><span class="pl-c1">1</span>,c);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">Object</span>.<span class="pl-c1">keys</span>(f).<span class="pl-c1">length</span>;){h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_getFromTo</span>(e,f);g<span class="pl-k">=</span>h[<span class="pl-c1">0</span>];l<span class="pl-k">=</span>h[<span class="pl-c1">1</span>];h<span class="pl-k">=</span>{};h[<span class="pl-c1">this</span>.<span class="pl-en">_pointKey</span>(g)]<span class="pl-k">=</span>g;<span class="pl-c1">this</span>.<span class="pl-en">_findConnected</span>(h,f,[g],<span class="pl-k">!</span><span class="pl-c1">0</span>,c);<span class="pl-c1">this</span>.<span class="pl-en">_tunnelToConnected</span>(l,g,e,f,c,d);<span class="pl-k">for</span>(<span class="pl-k">var</span> m <span class="pl-k">in</span> h)g<span class="pl-k">=</span>h[m],<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[g[<span class="pl-c1">0</span>]][g[<span class="pl-c1">1</span>]]<span class="pl-k">=</span>c,e[m]<span class="pl-k">=</span>g,<span class="pl-k">delete</span> f[m]}<span class="pl-c1">this</span>.<span class="pl-en">serviceCallback</span>(a)};</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getFromTo</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d,e,f,g<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-c1">keys</span>(a),l<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-c1">keys</span>(c),h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">5</span><span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;!</span>(<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>(d<span class="pl-k">=</span>g,e<span class="pl-k">=</span>a[d[<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)]],d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_getClosest</span>(e,c))<span class="pl-k">:</span>(d<span class="pl-k">=</span>l,d<span class="pl-k">=</span>c[d[<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)]],e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_getClosest</span>(d,a)),f<span class="pl-k">=</span>(d[<span class="pl-c1">0</span>]<span class="pl-k">-</span>e[<span class="pl-c1">0</span>])<span class="pl-k">*</span>(d[<span class="pl-c1">0</span>]<span class="pl-k">-</span>e[<span class="pl-c1">0</span>])<span class="pl-k">+</span>(d[<span class="pl-c1">1</span>]<span class="pl-k">-</span>e[<span class="pl-c1">1</span>])<span class="pl-k">*</span>(d[<span class="pl-c1">1</span>]<span class="pl-k">-</span>e[<span class="pl-c1">1</span>]),<span class="pl-c1">64</span><span class="pl-k">&gt;</span>f);h<span class="pl-k">++</span>);<span class="pl-k">return</span>[d,e]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getClosest</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,e<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">for</span>(k <span class="pl-k">in</span> c){<span class="pl-k">var</span> f<span class="pl-k">=</span>c[k],b<span class="pl-k">=</span>(f[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>])<span class="pl-k">*</span>(f[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>])<span class="pl-k">+</span>(f[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>])<span class="pl-k">*</span>(f[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>]);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">==</span>e<span class="pl-k">||</span>b<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line">e)e<span class="pl-k">=</span>b,d<span class="pl-k">=</span>f}<span class="pl-k">return</span> d};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_findConnected</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;)<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)[<span class="pl-c1">0</span>],b<span class="pl-k">=</span>[[b[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>,b[<span class="pl-c1">1</span>]],[b[<span class="pl-c1">0</span>]<span class="pl-k">-</span><span class="pl-c1">1</span>,b[<span class="pl-c1">1</span>]],[b[<span class="pl-c1">0</span>],b[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>],[b[<span class="pl-c1">0</span>],b[<span class="pl-c1">1</span>]<span class="pl-k">-</span><span class="pl-c1">1</span>]],l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_pointKey</span>(b[l]);<span class="pl-c1">null</span><span class="pl-k">==</span>a[h]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">_freeSpace</span>(b[l][<span class="pl-c1">0</span>],b[l][<span class="pl-c1">1</span>],f)<span class="pl-k">&amp;&amp;</span>(a[h]<span class="pl-k">=</span>b[l],e<span class="pl-k">||</span><span class="pl-k">delete</span> c[h],<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(b[l]))}};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_tunnelToConnected</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-en">_pointKey</span>(c);<span class="pl-k">if</span>(c[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span>a[<span class="pl-c1">0</span>]){<span class="pl-k">var</span> g<span class="pl-k">=</span>c;<span class="pl-k">var</span> h<span class="pl-k">=</span>a}<span class="pl-k">else</span> g<span class="pl-k">=</span>a,h<span class="pl-k">=</span>c;<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span>g[<span class="pl-c1">0</span>];m<span class="pl-k">&lt;=</span>h[<span class="pl-c1">0</span>];m<span class="pl-k">++</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[m][g[<span class="pl-c1">1</span>]]<span class="pl-k">=</span>f;<span class="pl-k">var</span> n<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line">[m,g[<span class="pl-c1">1</span>]];<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_pointKey</span>(n);d[p]<span class="pl-k">=</span>n;<span class="pl-k">delete</span> e[p]}b<span class="pl-k">&amp;&amp;</span>g[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span>h[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(g,[h[<span class="pl-c1">0</span>],g[<span class="pl-c1">1</span>]]);m<span class="pl-k">=</span>h[<span class="pl-c1">0</span>];c[<span class="pl-c1">1</span>]<span class="pl-k">&lt;</span>a[<span class="pl-c1">1</span>]<span class="pl-k">?</span>(g<span class="pl-k">=</span>c,h<span class="pl-k">=</span>a)<span class="pl-k">:</span>(g<span class="pl-k">=</span>a,h<span class="pl-k">=</span>c);<span class="pl-k">for</span>(a<span class="pl-k">=</span>g[<span class="pl-c1">1</span>];a<span class="pl-k">&lt;</span>h[<span class="pl-c1">1</span>];a<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[m][a]<span class="pl-k">=</span>f,n<span class="pl-k">=</span>[m,a],p<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_pointKey</span>(n),d[p]<span class="pl-k">=</span>n,<span class="pl-k">delete</span> e[p];b<span class="pl-k">&amp;&amp;</span>g[<span class="pl-c1">1</span>]<span class="pl-k">&lt;</span>h[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>([h[<span class="pl-c1">0</span>],g[<span class="pl-c1">1</span>]],[h[<span class="pl-c1">0</span>],h[<span class="pl-c1">1</span>]])};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_freeSpace</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&lt;=</span>a<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[a][c]<span class="pl-k">==</span>d};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Cellular</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_pointKey</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[<span class="pl-c1">1</span>]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Dungeon</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c);<span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line">[];<span class="pl-c1">this</span>.<span class="pl-smi">_corridors</span><span class="pl-k">=</span>[]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getCorridors</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_corridors</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Digger</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c);<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{roomWidth<span class="pl-k">:</span>[<span class="pl-c1">3</span>,<span class="pl-c1">9</span>],roomHeight<span class="pl-k">:</span>[<span class="pl-c1">3</span>,<span class="pl-c1">5</span>],corridorLength<span class="pl-k">:</span>[<span class="pl-c1">3</span>,<span class="pl-c1">10</span>],dugPercentage<span class="pl-k">:</span><span class="pl-c1">.2</span>,timeLimit<span class="pl-k">:</span><span class="pl-c1">1E3</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> e <span class="pl-k">in</span> d)<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[e]<span class="pl-k">=</span>d[e];<span class="pl-c1">this</span>.<span class="pl-smi">_features</span><span class="pl-k">=</span>{Room<span class="pl-k">:</span><span class="pl-c1">4</span>,Corridor<span class="pl-k">:</span><span class="pl-c1">4</span>};<span class="pl-c1">this</span>.<span class="pl-smi">_featureAttempts</span><span class="pl-k">=</span><span class="pl-c1">20</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_walls</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_digCallback</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_digCallback</span>.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>);</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_canBeDugCallback</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_canBeDugCallback</span>.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_isWallCallback</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_isWallCallback</span>.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_priorityWallCallback</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_priorityWallCallback</span>.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_corridors</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_walls</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">-</span><span class="pl-c1">2</span>)<span class="pl-k">*</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">-</span><span class="pl-c1">2</span>);<span class="pl-c1">this</span>.<span class="pl-en">_firstRoom</span>();<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>();<span class="pl-k">do</span>{<span class="pl-k">if</span>(<span class="pl-c1">Date</span>.<span class="pl-en">now</span>()<span class="pl-k">-</span>d<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">timeLimit</span>)<span class="pl-k">break</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_findWall</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span>e)<span class="pl-k">break</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(f[<span class="pl-c1">0</span>]),f<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(f[<span class="pl-c1">1</span>]),b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_getDiggingDirection</span>(e,f);<span class="pl-k">if</span>(b){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">do</span> <span class="pl-k">if</span>(l<span class="pl-k">++</span>,<span class="pl-c1">this</span>.<span class="pl-en">_tryFeature</span>(e,f,b[<span class="pl-c1">0</span>],b[<span class="pl-c1">1</span>])){<span class="pl-c1">this</span>.<span class="pl-en">_removeSurroundingWalls</span>(e,f);<span class="pl-c1">this</span>.<span class="pl-en">_removeSurroundingWalls</span>(e<span class="pl-k">-</span>b[<span class="pl-c1">0</span>],f<span class="pl-k">-</span>b[<span class="pl-c1">1</span>]);<span class="pl-k">break</span>}<span class="pl-k">while</span>(l<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_featureAttempts</span>);l<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> h <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_walls</span>)<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_walls</span>[h]<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">++</span>}}<span class="pl-k">while</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">/</span>c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">dugPercentage</span><span class="pl-k">||</span>l);<span class="pl-c1">this</span>.<span class="pl-en">_addDoors</span>();<span class="pl-k">if</span>(a)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;d<span class="pl-k">++</span>)<span class="pl-en">a</span>(c,d,<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[c][d]);<span class="pl-c1">this</span>.<span class="pl-smi">_walls</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">_digCallback</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">0</span><span class="pl-k">==</span>d<span class="pl-k">||</span><span class="pl-c1">2</span><span class="pl-k">==</span>d<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[a][c]<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">++</span>)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">_walls</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c]<span class="pl-k">=</span><span class="pl-c1">1</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_isWallCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>c<span class="pl-k">||</span>a<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">||</span>c<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[a][c]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_canBeDugCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>c<span class="pl-k">||</span>a<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">||</span>c<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[a][c]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_priorityWallCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_walls</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c]<span class="pl-k">=</span><span class="pl-c1">2</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_firstRoom</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-en">createRandomCenter</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">push</span>(a);<span class="pl-smi">a</span>.<span class="pl-en">create</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_digCallback</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_findWall</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[],c<span class="pl-k">=</span>[];<span class="pl-k">for</span>(d <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_walls</span>)<span class="pl-c1">2</span><span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">_walls</span>[d]<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(d)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(d);a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>c<span class="pl-k">:</span>a;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">sort</span>().<span class="pl-en">random</span>();<span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-smi">_walls</span>[d];<span class="pl-k">return</span> d};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_tryFeature</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getWeightedValue</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_features</span>),f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>[f].<span class="pl-en">createRandomAt</span>(a,c,d,e,<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-en">isValid</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_isWallCallback</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_canBeDugCallback</span>))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-en">create</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_digCallback</span>);f <span class="pl-k">instanceof</span> <span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">push</span>(f);f <span class="pl-k">instanceof</span> <span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-en">createPriorityWalls</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_priorityWallCallback</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_corridors</span>.<span class="pl-c1">push</span>(f));<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_removeSurroundingWalls</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">4</span>],e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d[e],g<span class="pl-k">=</span>a<span class="pl-k">+</span>f[<span class="pl-c1">0</span>],l<span class="pl-k">=</span>c<span class="pl-k">+</span>f[<span class="pl-c1">1</span>];<span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-smi">_walls</span>[g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>l];g<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>f[<span class="pl-c1">0</span>];l<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>f[<span class="pl-c1">1</span>];<span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-smi">_walls</span>[g<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>l]}};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getDiggingDirection</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;=</span>a<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;=</span>c<span class="pl-k">||</span>a<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span><span class="pl-k">||</span>c<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">4</span>],f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>e[f];<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[a<span class="pl-k">+</span>g[<span class="pl-c1">0</span>]][c<span class="pl-k">+</span>g[<span class="pl-c1">1</span>]]){<span class="pl-k">if</span>(d)<span class="pl-k">return</span> <span class="pl-c1">null</span>;d<span class="pl-k">=</span>g}}<span class="pl-k">return</span> d<span class="pl-k">?</span>[<span class="pl-k">-</span>d[<span class="pl-c1">0</span>],<span class="pl-k">-</span>d[<span class="pl-c1">1</span>]]<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Digger</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_addDoors</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>,<span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">==</span>a[c][d]},d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span>[d];<span class="pl-smi">e</span>.<span class="pl-en">clearDoors</span>();<span class="pl-smi">e</span>.<span class="pl-en">addDoors</span>(c)}};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Uniform</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c);<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{roomWidth<span class="pl-k">:</span>[<span class="pl-c1">3</span>,<span class="pl-c1">9</span>],roomHeight<span class="pl-k">:</span>[<span class="pl-c1">3</span>,<span class="pl-c1">5</span>],roomDugPercentage<span class="pl-k">:</span><span class="pl-c1">.1</span>,timeLimit<span class="pl-k">:</span><span class="pl-c1">1E3</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> e <span class="pl-k">in</span> d)<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[e]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">d[e];<span class="pl-c1">this</span>.<span class="pl-smi">_corridorAttempts</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_roomAttempts</span><span class="pl-k">=</span><span class="pl-c1">20</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_connected</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_unconnected</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_digCallback</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_digCallback</span>.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_canBeDugCallback</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_canBeDugCallback</span>.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_isWallCallback</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_isWallCallback</span>.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Dungeon</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>();;){<span class="pl-k">if</span>(<span class="pl-c1">Date</span>.<span class="pl-en">now</span>()<span class="pl-k">-</span>c<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">timeLimit</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_unconnected</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-en">_generateRooms</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-c1">2</span><span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">length</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">_generateCorridors</span>())<span class="pl-k">break</span>}<span class="pl-k">if</span>(a)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;d<span class="pl-k">++</span>)<span class="pl-en">a</span>(c,d,<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[c][d]);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_generateRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">-</span><span class="pl-c1">2</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">-</span><span class="pl-c1">2</span>;<span class="pl-k">do</span>{<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_generateRoom</span>();<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">/</span>(a<span class="pl-k">*</span>c)<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">roomDugPercentage</span>)<span class="pl-k">break</span>}<span class="pl-k">while</span>(d)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_generateRoom</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_roomAttempts</span>;){a<span class="pl-k">++</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-en">createRandom</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_width</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_height</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>);</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-en">isValid</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_isWallCallback</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_canBeDugCallback</span>))<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-en">create</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_digCallback</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">push</span>(c),c}<span class="pl-k">return</span> <span class="pl-c1">null</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_generateCorridors</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_corridorAttempts</span>;){a<span class="pl-k">++</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_corridors</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_map</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span>[c];<span class="pl-smi">d</span>.<span class="pl-en">clearDoors</span>();<span class="pl-smi">d</span>.<span class="pl-en">create</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_digCallback</span>)}<span class="pl-c1">this</span>.<span class="pl-smi">_unconnected</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_rooms</span>.<span class="pl-c1">slice</span>().<span class="pl-en">randomize</span>();<span class="pl-c1">this</span>.<span class="pl-smi">_connected</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_connected</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">pop</span>());;){c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_connected</span>.<span class="pl-en">random</span>();c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_closestRoom</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_unconnected</span>,c);d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_closestRoom</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_connected</span>,c);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-en">_connectRooms</span>(c,d))<span class="pl-k">break</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_closestRoom</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Infinity</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getCenter</span>(),f<span class="pl-k">=</span><span class="pl-c1">null</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span>a[b],h<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">getCenter</span>(),m<span class="pl-k">=</span>h[<span class="pl-c1">0</span>]<span class="pl-k">-</span>e[<span class="pl-c1">0</span>],h<span class="pl-k">=</span>h[<span class="pl-c1">1</span>]<span class="pl-k">-</span>e[<span class="pl-c1">1</span>],m<span class="pl-k">=</span>m<span class="pl-k">*</span>m<span class="pl-k">+</span>h<span class="pl-k">*</span>h;m<span class="pl-k">&lt;</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>m,f<span class="pl-k">=</span>l)}<span class="pl-k">return</span> f};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_connectRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getCenter</span>();<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getCenter</span>();<span class="pl-k">var</span> f<span class="pl-k">=</span>e[<span class="pl-c1">0</span>]<span class="pl-k">-</span>d[<span class="pl-c1">0</span>];d<span class="pl-k">=</span>e[<span class="pl-c1">1</span>]<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line">d[<span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(f)<span class="pl-k">&lt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d)){d<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>d<span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span>(d<span class="pl-k">+</span><span class="pl-c1">2</span>)<span class="pl-k">%</span><span class="pl-c1">4</span>;<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getLeft</span>();<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getRight</span>();f<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> d<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>f<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>,b<span class="pl-k">=</span>(d<span class="pl-k">+</span><span class="pl-c1">2</span>)<span class="pl-k">%</span><span class="pl-c1">4</span>,l<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getTop</span>(),h<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getBottom</span>(),f<span class="pl-k">=</span><span class="pl-c1">1</span>;d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_placeInWall</span>(a,d);<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(d[f]<span class="pl-k">&gt;=</span>l<span class="pl-k">&amp;&amp;</span>d[f]<span class="pl-k">&lt;=</span>h){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">slice</span>();e<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-c1">0</span>:e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getTop</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getRight</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getBottom</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span>:e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getLeft</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>}m[(f<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>e;<span class="pl-c1">this</span>.<span class="pl-en">_digLine</span>([d,m])}<span class="pl-k">else</span> <span class="pl-k">if</span>(d[f]<span class="pl-k">&lt;</span>l<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span>d[f]<span class="pl-k">&gt;</span>h<span class="pl-k">+</span><span class="pl-c1">1</span>){e<span class="pl-k">=</span>d[f]<span class="pl-k">-</span>e[f];<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-c1">0</span>:<span class="pl-k">case</span> <span class="pl-c1">1</span>:m<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>e<span class="pl-k">?</span><span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:<span class="pl-k">case</span> <span class="pl-c1">3</span>:m<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>e<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>}m<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">_placeInWall</span>(c,(b<span class="pl-k">+</span>m)<span class="pl-k">%</span><span class="pl-c1">4</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>m)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;b<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];b[f]<span class="pl-k">=</span>d[f];e<span class="pl-k">=</span>(f<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">2</span>;b[e]<span class="pl-k">=</span>m[e];<span class="pl-c1">this</span>.<span class="pl-en">_digLine</span>([d,b,m])}<span class="pl-k">else</span>{e<span class="pl-k">=</span>(f<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">2</span>;m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_placeInWall</span>(c,b);<span class="pl-k">if</span>(<span class="pl-k">!</span>m)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((m[e]<span class="pl-k">+</span>d[e])<span class="pl-k">/</span><span class="pl-c1">2</span>);h<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];l<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];h[f]<span class="pl-k">=</span>d[f];h[e]<span class="pl-k">=</span>b;l[f]<span class="pl-k">=</span>m[f];l[e]<span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-en">_digLine</span>([d,h,l,m])}<span class="pl-smi">a</span>.<span class="pl-en">addDoor</span>(d[<span class="pl-c1">0</span>],d[<span class="pl-c1">1</span>]);<span class="pl-smi">c</span>.<span class="pl-en">addDoor</span>(m[<span class="pl-c1">0</span>],m[<span class="pl-c1">1</span>]);f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">indexOf</span>(a);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">splice</span>(f,<span class="pl-c1">1</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_connected</span>.<span class="pl-c1">push</span>(a));f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">indexOf</span>(c);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_unconnected</span>.<span class="pl-c1">splice</span>(f,<span class="pl-c1">1</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_connected</span>.<span class="pl-c1">push</span>(c));<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_placeInWall</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],e<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">switch</span>(c){<span class="pl-k">case</span> <span class="pl-c1">0</span>:e<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>];d<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">getLeft</span>(),<span class="pl-smi">a</span>.<span class="pl-en">getTop</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>];b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getRight</span>()<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-en">getLeft</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:e<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>];d<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">getRight</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-en">getTop</span>()];b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getBottom</span>()<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-en">getTop</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:e<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>];d<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">getLeft</span>(),<span class="pl-smi">a</span>.<span class="pl-en">getBottom</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>];b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getRight</span>()<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-en">getLeft</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span>:e<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],d<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">getLeft</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-en">getTop</span>()],b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getBottom</span>()<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-en">getTop</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>}<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span>[],l<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>b;h<span class="pl-k">++</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span>d[<span class="pl-c1">0</span>]<span class="pl-k">+</span>h<span class="pl-k">*</span>e[<span class="pl-c1">0</span>],n<span class="pl-k">=</span>d[<span class="pl-c1">1</span>]<span class="pl-k">+</span>h<span class="pl-k">*</span>e[<span class="pl-c1">1</span>];<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-c1">null</span>);<span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[m][n]<span class="pl-k">?</span>l<span class="pl-k">!=</span>h<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line">(g[h]<span class="pl-k">=</span>[m,n])<span class="pl-k">:</span>(l<span class="pl-k">=</span>h)<span class="pl-k">&amp;&amp;</span>(g[h<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">null</span>)}<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>h;h<span class="pl-k">--</span>)g[h]<span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-c1">splice</span>(h,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-en">random</span>()<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_digLine</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">1</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[c<span class="pl-k">-</span><span class="pl-c1">1</span>],e<span class="pl-k">=</span>a[c],d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">b.Map.Feature.Corridor</span>(d[<span class="pl-c1">0</span>],d[<span class="pl-c1">1</span>],e[<span class="pl-c1">0</span>],e[<span class="pl-c1">1</span>]);<span class="pl-smi">d</span>.<span class="pl-en">create</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_digCallback</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_corridors</span>.<span class="pl-c1">push</span>(d)}};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_digCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[a][c]<span class="pl-k">=</span>d;<span class="pl-c1">0</span><span class="pl-k">==</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_dug</span><span class="pl-k">++</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_isWallCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>c<span class="pl-k">||</span>a<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">||</span>c<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[a][c]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Uniform</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_canBeDugCallback</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>c<span class="pl-k">||</span>a<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">||</span>c<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">_map</span>[a][c]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Rogue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c);<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{cellWidth<span class="pl-k">:</span><span class="pl-c1">3</span>,cellHeight<span class="pl-k">:</span><span class="pl-c1">3</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> e <span class="pl-k">in</span> d)<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[e]<span class="pl-k">=</span>d[e];<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-en">hasOwnProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>roomWidth<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">roomWidth</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_calculateRoomSize</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_width</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>));<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-en">hasOwnProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>roomHeight<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">roomHeight</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_calculateRoomSize</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_height</span>,</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>))};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_fillMap</span>(<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">rooms</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">connectedCells</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-en">_initRooms</span>();<span class="pl-c1">this</span>.<span class="pl-en">_connectRooms</span>();<span class="pl-c1">this</span>.<span class="pl-en">_connectUnconnectedRooms</span>();<span class="pl-c1">this</span>.<span class="pl-en">_createRandomRoomConnections</span>();<span class="pl-c1">this</span>.<span class="pl-en">_createRooms</span>();<span class="pl-c1">this</span>.<span class="pl-en">_createCorridors</span>();<span class="pl-k">if</span>(a)<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>;d<span class="pl-k">++</span>)<span class="pl-en">a</span>(c,d,<span class="pl-c1">this</span>.<span class="pl-smi">map</span>[c][d]);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_calculateRoomSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span>c<span class="pl-k">*</span><span class="pl-c1">.8</span>),e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">*</span><span class="pl-c1">.25</span>);<span class="pl-c1">2</span><span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">2</span>);<span class="pl-c1">2</span><span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">2</span>);<span class="pl-k">return</span>[e,d]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_initRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>;a<span class="pl-k">++</span>){<span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>.<span class="pl-c1">push</span>([]);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>;c<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[a].<span class="pl-c1">push</span>({x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>,connections<span class="pl-k">:</span>[],cellx<span class="pl-k">:</span>a,celly<span class="pl-k">:</span>c})}};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_connectRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span><span class="pl-k">-</span><span class="pl-c1">1</span>),c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span><span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">do</span>{<span class="pl-k">var</span> d<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>];d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">randomize</span>();<span class="pl-k">do</span>{<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">pop</span>();<span class="pl-k">var</span> g<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][f][<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][f][<span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>g<span class="pl-k">||</span>g<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>f<span class="pl-k">||</span>f<span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>)){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[a][c];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">connections</span>[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]<span class="pl-k">==</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">connections</span>[<span class="pl-c1">0</span>][<span class="pl-c1">1</span>]<span class="pl-k">==</span>f)<span class="pl-k">break</span>;l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[g][f];<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-smi">l</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">l</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">push</span>([a,c]),<span class="pl-c1">this</span>.<span class="pl-smi">connectedCells</span>.<span class="pl-c1">push</span>([g,f]),a<span class="pl-k">=</span>g,c<span class="pl-k">=</span>f,e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}}<span class="pl-k">while</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">==</span>e)}<span class="pl-k">while</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_connectUnconnectedRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>;<span class="pl-c1">this</span>.<span class="pl-smi">connectedCells</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">connectedCells</span>.<span class="pl-en">randomize</span>();</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> d,e,f,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>;g<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>;l<span class="pl-k">++</span>)<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[g][l],<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-smi">d</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>],h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">randomize</span>();f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">do</span>{<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">pop</span>(),n<span class="pl-k">=</span>g<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][m][<span class="pl-c1">0</span>],m<span class="pl-k">=</span>l<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][m][<span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>n<span class="pl-k">||</span>n<span class="pl-k">&gt;=</span>a<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>m<span class="pl-k">||</span>m<span class="pl-k">&gt;=</span>c)){e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[n][m];f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-smi">e</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span>)<span class="pl-k">break</span>;<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">connections</span>[n][<span class="pl-c1">0</span>]<span class="pl-k">==</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">connections</span>[n][<span class="pl-c1">1</span>]<span class="pl-k">==</span>l){f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}<span class="pl-k">if</span>(f)<span class="pl-k">break</span>}}<span class="pl-k">while</span>(<span class="pl-smi">h</span>.<span class="pl-c1">length</span>);f<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">push</span>([<span class="pl-smi">e</span>.<span class="pl-smi">cellx</span>,<span class="pl-smi">e</span>.<span class="pl-smi">celly</span>])<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-- Unable to connect room.<span class="pl-pds">&quot;</span></span>)}};</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_createRandomRoomConnections</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_createRooms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_width</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_height</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>,f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_width</span><span class="pl-k">/</span>d),g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_height</span><span class="pl-k">/</span>e),l,h,m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">roomWidth</span>,n<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">roomHeight</span>,p,r,q,t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span>d;t<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-c1">0</span>;u<span class="pl-k">&lt;</span>e;u<span class="pl-k">++</span>){p<span class="pl-k">=</span>f<span class="pl-k">*</span>t;r<span class="pl-k">=</span>g<span class="pl-k">*</span>u;<span class="pl-c1">0</span><span class="pl-k">==</span>p<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-c1">0</span><span class="pl-k">==</span>r<span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span><span class="pl-c1">1</span>);l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(m[<span class="pl-c1">0</span>],m[<span class="pl-c1">1</span>]);h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(n[<span class="pl-c1">0</span>],n[<span class="pl-c1">1</span>]);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>u)<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[t][u<span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-c1">3</span><span class="pl-k">&gt;</span>r<span class="pl-k">-</span>(<span class="pl-smi">q</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">q</span>.<span class="pl-c1">height</span>);)r<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>t)<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[t<span class="pl-k">-</span><span class="pl-c1">1</span>][u];<span class="pl-c1">3</span><span class="pl-k">&gt;</span>p<span class="pl-k">-</span>(<span class="pl-smi">q</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">q</span>.<span class="pl-c1">width</span>);)p<span class="pl-k">++</span>;q<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,f<span class="pl-k">-</span>l)<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-c1">0</span>,g<span class="pl-k">-</span>h)<span class="pl-k">/</span><span class="pl-c1">2</span>);p<span class="pl-k">+</span>q<span class="pl-k">+</span>l<span class="pl-k">&gt;=</span>a;)q<span class="pl-k">?</span>q<span class="pl-k">--</span><span class="pl-k">:</span>l<span class="pl-k">--</span>;<span class="pl-k">for</span>(;r<span class="pl-k">+</span>v<span class="pl-k">+</span>h<span class="pl-k">&gt;=</span>c;)v<span class="pl-k">?</span>v<span class="pl-k">--</span><span class="pl-k">:</span>h<span class="pl-k">--</span>;p<span class="pl-k">+=</span>q;r<span class="pl-k">+=</span>v;<span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[t][u].<span class="pl-c1">x</span><span class="pl-k">=</span>p;<span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[t][u].<span class="pl-c1">y</span><span class="pl-k">=</span>r;<span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[t][u].<span class="pl-c1">width</span><span class="pl-k">=</span>l;<span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[t][u].<span class="pl-c1">height</span><span class="pl-k">=</span>h;<span class="pl-k">for</span>(q<span class="pl-k">=</span>p;q<span class="pl-k">&lt;</span>p<span class="pl-k">+</span>l;q<span class="pl-k">++</span>)<span class="pl-k">for</span>(v<span class="pl-k">=</span>r;v<span class="pl-k">&lt;</span>r<span class="pl-k">+</span>h;v<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">map</span>[q][v]<span class="pl-k">=</span><span class="pl-c1">0</span>}};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getWallPosition</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>c<span class="pl-k">||</span><span class="pl-c1">3</span><span class="pl-k">==</span>c){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">-</span><span class="pl-c1">2</span>);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>c){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">2</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span>e<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">map</span>[d][f]<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">2</span><span class="pl-k">==</span>c<span class="pl-k">||</span><span class="pl-c1">4</span><span class="pl-k">==</span>c)e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">2</span>),<span class="pl-c1">2</span><span class="pl-k">==</span>c<span class="pl-k">?</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">2</span>,f<span class="pl-k">=</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>),<span class="pl-c1">this</span>.<span class="pl-smi">map</span>[f][e]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span>[d,e]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_drawCorridor</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>c[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>c[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],g<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],l<span class="pl-k">=</span>[];<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d);<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e);<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>();<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span>n,d<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>d<span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">6</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>e<span class="pl-k">?</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>m<span class="pl-k">?</span>(n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(m<span class="pl-k">*</span>n),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([e,n]),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([d,h]),n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(m<span class="pl-k">*</span>p),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([e,n]))<span class="pl-k">:</span>(n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(h<span class="pl-k">*</span>n),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([d,n]),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([e,m]),n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(h<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line">p),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>([d,n]));<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-smi">map</span>[f][g]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;)<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">pop</span>();<span class="pl-c1">0</span><span class="pl-k">&lt;</span>h[<span class="pl-c1">1</span>];)f<span class="pl-k">+=</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][h[<span class="pl-c1">0</span>]][<span class="pl-c1">0</span>],g<span class="pl-k">+=</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][h[<span class="pl-c1">0</span>]][<span class="pl-c1">1</span>],<span class="pl-c1">this</span>.<span class="pl-smi">map</span>[f][g]<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-k">--</span>h[<span class="pl-c1">1</span>]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Rogue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_createCorridors</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellWidth</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">cellHeight</span>,d,e,b,g,l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>a;l<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>c;h<span class="pl-k">++</span>){d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[l][h];<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">connections</span>.<span class="pl-c1">length</span>;m<span class="pl-k">++</span>)e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">connections</span>[m],e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rooms</span>[e[<span class="pl-c1">0</span>]][e[<span class="pl-c1">1</span>]],<span class="pl-smi">e</span>.<span class="pl-smi">cellx</span><span class="pl-k">&gt;</span><span class="pl-smi">d</span>.<span class="pl-smi">cellx</span><span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-c1">2</span>,g<span class="pl-k">=</span><span class="pl-c1">4</span>)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">cellx</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">cellx</span><span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-c1">4</span>,g<span class="pl-k">=</span><span class="pl-c1">2</span>)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">celly</span><span class="pl-k">&gt;</span><span class="pl-smi">d</span>.<span class="pl-smi">celly</span><span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-c1">3</span>,g<span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">celly</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">celly</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-c1">3</span>),</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">_drawCorridor</span>(<span class="pl-c1">this</span>.<span class="pl-en">_getWallPosition</span>(d,b),<span class="pl-c1">this</span>.<span class="pl-en">_getWallPosition</span>(e,g))}};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-en">Feature</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">isValid</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">debug</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-en">createRandomAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">b</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-en">Room</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">b</span>,<span class="pl-smi">g</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_x1</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_y1</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">_x2</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">_y2</span><span class="pl-k">=</span>e;<span class="pl-c1">this</span>.<span class="pl-smi">_doors</span><span class="pl-k">=</span>{};<span class="pl-c1">4</span><span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">addDoor</span>(b,g)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-smi">createRandomAt</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">0</span>],l<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">1</span>],h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(g,l),g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">0</span>],l<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">1</span>];f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(g,l);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>d)<span class="pl-k">return</span> d<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>f),<span class="pl-k">new</span> <span class="pl-en">this</span>(a<span class="pl-k">+</span><span class="pl-c1">1</span>,d,a<span class="pl-k">+</span>h,d<span class="pl-k">+</span>f<span class="pl-k">-</span><span class="pl-c1">1</span>,a,c);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>d)<span class="pl-k">return</span> d<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>f),<span class="pl-k">new</span> <span class="pl-en">this</span>(a<span class="pl-k">-</span>h,d,a<span class="pl-k">-</span><span class="pl-c1">1</span>,d<span class="pl-k">+</span>f<span class="pl-k">-</span><span class="pl-c1">1</span>,a,c);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>e)<span class="pl-k">return</span> d<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>h),<span class="pl-k">new</span> <span class="pl-en">this</span>(d,c<span class="pl-k">+</span><span class="pl-c1">1</span>,d<span class="pl-k">+</span>h<span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">+</span>f,a,c);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>e)<span class="pl-k">return</span> d<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>h),<span class="pl-k">new</span> <span class="pl-en">this</span>(d,c<span class="pl-k">-</span>f,d<span class="pl-k">+</span>h<span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">-</span><span class="pl-c1">1</span>,a,c);<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dx or dy must be 1 or -1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line">};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-en">createRandomCenter</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">0</span>],f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">1</span>],g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(e,f),e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">0</span>],f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">1</span>];d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(e,f);a<span class="pl-k">-=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>g);c<span class="pl-k">-=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>d);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this</span>(a,c,a<span class="pl-k">+</span>g<span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">+</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-en">createRandom</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">0</span>],f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">roomWidth</span>[<span class="pl-c1">1</span>],g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(e,f),e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">0</span>],f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">roomHeight</span>[<span class="pl-c1">1</span>];d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(e,f);a<span class="pl-k">=</span>a<span class="pl-k">-</span>g<span class="pl-k">-</span><span class="pl-c1">1</span>;c<span class="pl-k">=</span>c<span class="pl-k">-</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>;a<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line">a);c<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniform</span>()<span class="pl-k">*</span>c);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this</span>(a,c,a<span class="pl-k">+</span>g<span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">+</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">addDoor</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_doors</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getDoors</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_doors</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);<span class="pl-en">a</span>(<span class="pl-c1">parseInt</span>(d[<span class="pl-c1">0</span>]),<span class="pl-c1">parseInt</span>(d[<span class="pl-c1">1</span>]))}<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clearDoors</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_doors</span><span class="pl-k">=</span>{};<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">addDoors</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_x1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_x2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_y1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_y2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span>c;g<span class="pl-k">&lt;=</span>d;g<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line">e;l<span class="pl-k">&lt;=</span>b;l<span class="pl-k">++</span>)<span class="pl-k">if</span>(g<span class="pl-k">==</span>c<span class="pl-k">||</span>g<span class="pl-k">==</span>d<span class="pl-k">||</span>l<span class="pl-k">==</span>e<span class="pl-k">||</span>l<span class="pl-k">==</span>b)<span class="pl-en">a</span>(g,l)<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">addDoor</span>(g,l);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">debug</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>room<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">_x1</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_y1</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_x2</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_y2</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">isValid</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_x1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_x2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_y1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_y2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,l<span class="pl-k">=</span>d;l<span class="pl-k">&lt;=</span>e;l<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span>b;h<span class="pl-k">&lt;=</span>g;h<span class="pl-k">++</span>)<span class="pl-k">if</span>(l<span class="pl-k">==</span>d<span class="pl-k">||</span>l<span class="pl-k">==</span>e<span class="pl-k">||</span>h<span class="pl-k">==</span>b<span class="pl-k">||</span>h<span class="pl-k">==</span>g){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">a</span>(l,h))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">c</span>(l,h))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_x1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_x2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_y1</span><span class="pl-k">-</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_y2</span><span class="pl-k">+</span><span class="pl-c1">1</span>,g,l<span class="pl-k">=</span>c;l<span class="pl-k">&lt;=</span>d;l<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span>e;h<span class="pl-k">&lt;=</span>b;h<span class="pl-k">++</span>)g<span class="pl-k">=</span>l<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_doors</span><span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span>l<span class="pl-k">==</span>c<span class="pl-k">||</span>l<span class="pl-k">==</span>d<span class="pl-k">||</span>h<span class="pl-k">==</span>e<span class="pl-k">||</span>h<span class="pl-k">==</span>b<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-en">a</span>(l,h,g)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getCenter</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((<span class="pl-c1">this</span>.<span class="pl-smi">_x1</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_x2</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((<span class="pl-c1">this</span>.<span class="pl-smi">_y1</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_y2</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>)]};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getLeft</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_x1</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getRight</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_x2</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getTop</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_y1</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Room</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getBottom</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_y2</span>};</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-en">Corridor</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_startX</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_startY</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">=</span>e;<span class="pl-c1">this</span>.<span class="pl-smi">_endsWithAWall</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-en">createRandomAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getUniformInt</span>(<span class="pl-smi">f</span>.<span class="pl-smi">corridorLength</span>[<span class="pl-c1">0</span>],<span class="pl-smi">f</span>.<span class="pl-smi">corridorLength</span>[<span class="pl-c1">1</span>]);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this</span>(a,c,a<span class="pl-k">+</span>d<span class="pl-k">*</span>f,c<span class="pl-k">+</span>e<span class="pl-k">*</span>f)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">debug</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>corridor<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">_startX</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_startY</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_endX</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_endY</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">isValid</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_startX</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_startY</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">-</span>d,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">-</span>e,l<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(b),<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(g));b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(b));g<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(g));<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span>g,m<span class="pl-k">=</span><span class="pl-k">-</span>b,n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span><span class="pl-c1">0</span>;p<span class="pl-k">&lt;</span>l;p<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>d<span class="pl-k">+</span>p<span class="pl-k">*</span>b,q<span class="pl-k">=</span>e<span class="pl-k">+</span>p<span class="pl-k">*</span>g;<span class="pl-en">c</span>(r,q)<span class="pl-k">||</span>(n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(r<span class="pl-k">+</span>h,q<span class="pl-k">+</span>m)<span class="pl-k">||</span>(n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(r<span class="pl-k">-</span>h,q<span class="pl-k">-</span>m)<span class="pl-k">||</span>(n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>n){l<span class="pl-k">=</span>p;<span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">=</span>r<span class="pl-k">-</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">=</span>q<span class="pl-k">-</span>g;<span class="pl-k">break</span>}}<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>l<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">==</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span>b,<span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>g))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-en">a</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span>b<span class="pl-k">+</span>h,<span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>g<span class="pl-k">+</span>m);h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-en">a</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span>b<span class="pl-k">-</span>h,<span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>g<span class="pl-k">-</span>m);<span class="pl-c1">this</span>.<span class="pl-smi">_endsWithAWall</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span>b,<span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>g);<span class="pl-k">return</span>(d<span class="pl-k">||</span>h)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_endsWithAWall</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_startX</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_startY</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">-</span>c,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">-</span>d,g<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e),<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(b));e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e));b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(b));<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>g;l<span class="pl-k">++</span>)<span class="pl-en">a</span>(c<span class="pl-k">+</span>l<span class="pl-k">*</span>e,d<span class="pl-k">+</span>l<span class="pl-k">*</span>b,<span class="pl-c1">0</span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Map</span>.<span class="pl-smi">Feature</span>.<span class="pl-smi">Corridor</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">createPriorityWalls</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_endsWithAWall</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_startX</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_startY</span>;c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(c));d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d));<span class="pl-k">var</span> e<span class="pl-k">=</span>d,b<span class="pl-k">=</span><span class="pl-k">-</span>c;<span class="pl-en">a</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>d);<span class="pl-en">a</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">+</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">+</span>b);</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-en">a</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_endX</span><span class="pl-k">-</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_endY</span><span class="pl-k">-</span>b)}};<span class="pl-smi">b</span>.<span class="pl-en">Noise</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-smi">b</span>.<span class="pl-smi">Noise</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">get</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Noise</span>.<span class="pl-en">Simplex</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Noise</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_F2</span><span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>)<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_G2</span><span class="pl-k">=</span>(<span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">3</span>))<span class="pl-k">/</span><span class="pl-c1">6</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_gradients</span><span class="pl-k">=</span>[[<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>]];<span class="pl-k">var</span> c<span class="pl-k">=</span>[];a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-c1">256</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>a;d<span class="pl-k">++</span>)<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(d);c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">randomize</span>();<span class="pl-c1">this</span>.<span class="pl-smi">_perms</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_indexes</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">*</span>a;d<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">_perms</span>.<span class="pl-c1">push</span>(c[d<span class="pl-k">%</span>a]),<span class="pl-c1">this</span>.<span class="pl-smi">_indexes</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_perms</span>[d]<span class="pl-k">%</span><span class="pl-c1">this</span>.<span class="pl-smi">_gradients</span>.<span class="pl-c1">length</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Noise</span>.<span class="pl-smi">Simplex</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Noise</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Noise</span>.<span class="pl-smi">Simplex</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">get</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_perms</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_indexes</span>,b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">2</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_G2</span>,l<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-c1">0</span>,n<span class="pl-k">=</span>(a<span class="pl-k">+</span>c)<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_F2</span>,p<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a<span class="pl-k">+</span>n);<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(c<span class="pl-k">+</span>n);<span class="pl-k">var</span> n<span class="pl-k">=</span>(p<span class="pl-k">+</span>r)<span class="pl-k">*</span>g,q<span class="pl-k">=</span>a<span class="pl-k">-</span>(p<span class="pl-k">-</span>n),t<span class="pl-k">=</span>c<span class="pl-k">-</span>(r<span class="pl-k">-</span>n);<span class="pl-k">if</span>(q<span class="pl-k">&gt;</span>t){<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> u<span class="pl-k">=</span><span class="pl-c1">0</span>,v<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> x<span class="pl-k">=</span>q<span class="pl-k">-</span>u<span class="pl-k">+</span>g,y<span class="pl-k">=</span>t<span class="pl-k">-</span>v<span class="pl-k">+</span>g,n<span class="pl-k">=</span>q<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>g,g<span class="pl-k">=</span>t<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>g,p<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-en">mod</span>(b),b<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">mod</span>(b),w<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">-</span>q<span class="pl-k">*</span>q<span class="pl-k">-</span>t<span class="pl-k">*</span>t;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>w<span class="pl-k">&amp;&amp;</span>(w<span class="pl-k">*=</span>w,r<span class="pl-k">=</span>e[p<span class="pl-k">+</span>d[b]],r<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_gradients</span>[r],l<span class="pl-k">=</span>w<span class="pl-k">*</span>w<span class="pl-k">*</span>(r[<span class="pl-c1">0</span>]<span class="pl-k">*</span>q<span class="pl-k">+</span>r[<span class="pl-c1">1</span>]<span class="pl-k">*</span>t));q<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">-</span>x<span class="pl-k">*</span>x<span class="pl-k">-</span>y<span class="pl-k">*</span>y;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>q<span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">*=</span>q,r<span class="pl-k">=</span>e[p<span class="pl-k">+</span>u<span class="pl-k">+</span>d[b<span class="pl-k">+</span>v]],r<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_gradients</span>[r],h<span class="pl-k">=</span>q<span class="pl-k">*</span>q<span class="pl-k">*</span>(r[<span class="pl-c1">0</span>]<span class="pl-k">*</span>x<span class="pl-k">+</span>r[<span class="pl-c1">1</span>]<span class="pl-k">*</span>y));q<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">-</span>n<span class="pl-k">*</span>n<span class="pl-k">-</span>g<span class="pl-k">*</span>g;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>q<span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">*=</span>q,r<span class="pl-k">=</span>e[p<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span>d[b<span class="pl-k">+</span><span class="pl-c1">1</span>]],r<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_gradients</span>[r],</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line">m<span class="pl-k">=</span>q<span class="pl-k">*</span>q<span class="pl-k">*</span>(r[<span class="pl-c1">0</span>]<span class="pl-k">*</span>n<span class="pl-k">+</span>r[<span class="pl-c1">1</span>]<span class="pl-k">*</span>g));<span class="pl-k">return</span> <span class="pl-c1">70</span><span class="pl-k">*</span>(l<span class="pl-k">+</span>h<span class="pl-k">+</span>m)};<span class="pl-smi">b</span>.<span class="pl-en">FOV</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_lightPasses</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{topology<span class="pl-k">:</span><span class="pl-c1">8</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> d <span class="pl-k">in</span> c)<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[d]<span class="pl-k">=</span>c[d]};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">b</span>){};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getCircle</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>[];<span class="pl-k">switch</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span>){<span class="pl-k">case</span> <span class="pl-c1">4</span>:<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>];<span class="pl-k">var</span> l<span class="pl-k">=</span>[<span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][<span class="pl-c1">7</span>],<span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][<span class="pl-c1">1</span>],<span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][<span class="pl-c1">3</span>],<span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">8</span>][<span class="pl-c1">5</span>]];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span>:l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">6</span>];f<span class="pl-k">=</span><span class="pl-c1">1</span>;g<span class="pl-k">=</span>[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span>:l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">4</span>],f<span class="pl-k">=</span><span class="pl-c1">2</span>,g<span class="pl-k">=</span>[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>]}a<span class="pl-k">+=</span>g[<span class="pl-c1">0</span>]<span class="pl-k">*</span>d;c<span class="pl-k">+=</span>g[<span class="pl-c1">1</span>]<span class="pl-k">*</span>d;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>d<span class="pl-k">*</span>f;h<span class="pl-k">++</span>)<span class="pl-smi">e</span>.<span class="pl-c1">push</span>([a,</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line">c]),a<span class="pl-k">+=</span>l[g][<span class="pl-c1">0</span>],c<span class="pl-k">+=</span>l[g][<span class="pl-c1">1</span>];<span class="pl-k">return</span> e};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-en">DiscreteShadowcasting</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c)};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">DiscreteShadowcasting</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>);<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">DiscreteShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">b</span>){<span class="pl-en">b</span>(a,c,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">_lightPasses</span>(a,c))<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>[],g,l,h,m,n,p<span class="pl-k">=</span><span class="pl-c1">1</span>;p<span class="pl-k">&lt;=</span>d;p<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_getCircle</span>(a,c,p),q<span class="pl-k">=</span><span class="pl-c1">360</span><span class="pl-k">/</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>,t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>;t<span class="pl-k">++</span>)<span class="pl-k">if</span>(h<span class="pl-k">=</span>r[t][<span class="pl-c1">0</span>],m<span class="pl-k">=</span>r[t][<span class="pl-c1">1</span>],g<span class="pl-k">=</span>q<span class="pl-k">*</span>(t<span class="pl-k">-</span><span class="pl-c1">.5</span>),l<span class="pl-k">=</span>g<span class="pl-k">+</span>q,n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-en">_lightPasses</span>(h,m),<span class="pl-c1">this</span>.<span class="pl-en">_visibleCoords</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(g),<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(l),n,e)<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(h,m,p,<span class="pl-c1">1</span>),<span class="pl-c1">2</span><span class="pl-k">==</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">==</span>e[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">360</span><span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line">e[<span class="pl-c1">1</span>])<span class="pl-k">return</span>};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">DiscreteShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_visibleCoords</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>a)<span class="pl-k">return</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_visibleCoords</span>(<span class="pl-c1">0</span>,c,d,b),a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_visibleCoords</span>(<span class="pl-c1">360</span><span class="pl-k">+</span>a,<span class="pl-c1">360</span>,d,b),c<span class="pl-k">||</span>a;<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>b[e]<span class="pl-k">&lt;</span>a;)e<span class="pl-k">++</span>;<span class="pl-k">if</span>(e<span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(a,c),<span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(e<span class="pl-k">%</span><span class="pl-c1">2</span>){<span class="pl-k">for</span>(;e<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>b[e]<span class="pl-k">&lt;</span>c;)e<span class="pl-k">++</span>,g<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>g)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;d<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(e<span class="pl-k">-</span>g,g,c)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(e<span class="pl-k">-</span>g,g))}<span class="pl-k">else</span>{<span class="pl-k">for</span>(;e<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>b[e]<span class="pl-k">&lt;</span>c;)e<span class="pl-k">++</span>,g<span class="pl-k">++</span>;<span class="pl-k">if</span>(a<span class="pl-k">==</span>b[e<span class="pl-k">-</span>g]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">==</span>g)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;d<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(e<span class="pl-k">-</span>g,g,a)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(e<span class="pl-k">-</span>g,g,a,c))}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">PreciseShadowcasting</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c)};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">PreciseShadowcasting</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>);<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">PreciseShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">b</span>){<span class="pl-en">b</span>(a,c,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">_lightPasses</span>(a,c))<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>[],g,l,h,m,n,p<span class="pl-k">=</span><span class="pl-c1">1</span>;p<span class="pl-k">&lt;=</span>d;p<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_getCircle</span>(a,c,p),q<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>,t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span>q;t<span class="pl-k">++</span>)<span class="pl-k">if</span>(g<span class="pl-k">=</span>r[t][<span class="pl-c1">0</span>],l<span class="pl-k">=</span>r[t][<span class="pl-c1">1</span>],m<span class="pl-k">=</span>[t<span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">*</span>t<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>q<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">2</span><span class="pl-k">*</span>q],n<span class="pl-k">=</span>[<span class="pl-c1">2</span><span class="pl-k">*</span>t<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">2</span><span class="pl-k">*</span>q],h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-en">_lightPasses</span>(g,l),(h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_checkVisibility</span>(m,n,h,e))<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(g,l,p,h),<span class="pl-c1">2</span><span class="pl-k">==</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">==</span>e[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>e[<span class="pl-c1">1</span>][<span class="pl-c1">0</span>]<span class="pl-k">==</span>e[<span class="pl-c1">1</span>][<span class="pl-c1">1</span>])<span class="pl-k">return</span>};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">PreciseShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">_checkVisibility</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span>c[<span class="pl-c1">0</span>])<span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_checkVisibility</span>(a,[a[<span class="pl-c1">1</span>],a[<span class="pl-c1">1</span>]],d,b),c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_checkVisibility</span>([<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],c,d,b),(a<span class="pl-k">+</span>c)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> l<span class="pl-k">=</span>b[e];l<span class="pl-k">=</span>l[<span class="pl-c1">0</span>]<span class="pl-k">*</span>a[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>l[<span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>l){<span class="pl-c1">0</span><span class="pl-k">!=</span>l<span class="pl-k">||</span>e<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">||</span>(g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">break</span>}e<span class="pl-k">++</span>}<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;h<span class="pl-k">--</span>;)<span class="pl-k">if</span>(l<span class="pl-k">=</span>b[h],l<span class="pl-k">=</span>c[<span class="pl-c1">0</span>]<span class="pl-k">*</span>l[<span class="pl-c1">1</span>]<span class="pl-k">-</span>l[<span class="pl-c1">0</span>]<span class="pl-k">*</span>c[<span class="pl-c1">1</span>],<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>l){<span class="pl-c1">0</span><span class="pl-k">==</span>l<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">break</span>}l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;e<span class="pl-k">==</span>h<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">||</span>m)<span class="pl-k">?</span>l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>g<span class="pl-k">&amp;&amp;</span>m<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">==</span>h<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span>l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>e<span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>l)<span class="pl-k">return</span> <span class="pl-c1">0</span>;g<span class="pl-k">=</span>h<span class="pl-k">-</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(g<span class="pl-k">%</span><span class="pl-c1">2</span>)e<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span>(h<span class="pl-k">=</span>b[e],h<span class="pl-k">=</span>(c[<span class="pl-c1">0</span>]<span class="pl-k">*</span>h[<span class="pl-c1">1</span>]<span class="pl-k">-</span>h[<span class="pl-c1">0</span>]<span class="pl-k">*</span>c[<span class="pl-c1">1</span>])<span class="pl-k">/</span>(h[<span class="pl-c1">1</span>]<span class="pl-k">*</span>c[<span class="pl-c1">1</span>]),d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(e,g,c))<span class="pl-k">:</span>(h<span class="pl-k">=</span>b[h],h<span class="pl-k">=</span>(h[<span class="pl-c1">0</span>]<span class="pl-k">*</span>a[<span class="pl-c1">1</span>]<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line">a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>h[<span class="pl-c1">1</span>])<span class="pl-k">/</span>(a[<span class="pl-c1">1</span>]<span class="pl-k">*</span>h[<span class="pl-c1">1</span>]),d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(e,g,a));<span class="pl-k">else</span> <span class="pl-k">if</span>(e<span class="pl-k">%</span><span class="pl-c1">2</span>)m<span class="pl-k">=</span>b[e],h<span class="pl-k">=</span>b[h],h<span class="pl-k">=</span>(h[<span class="pl-c1">0</span>]<span class="pl-k">*</span>m[<span class="pl-c1">1</span>]<span class="pl-k">-</span>m[<span class="pl-c1">0</span>]<span class="pl-k">*</span>h[<span class="pl-c1">1</span>])<span class="pl-k">/</span>(m[<span class="pl-c1">1</span>]<span class="pl-k">*</span>h[<span class="pl-c1">1</span>]),d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(e,g);<span class="pl-k">else</span> <span class="pl-k">return</span> d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(e,g,a,c),<span class="pl-c1">1</span>;<span class="pl-k">return</span> h<span class="pl-k">/</span>((c[<span class="pl-c1">0</span>]<span class="pl-k">*</span>a[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>c[<span class="pl-c1">1</span>])<span class="pl-k">/</span>(a[<span class="pl-c1">1</span>]<span class="pl-k">*</span>c[<span class="pl-c1">1</span>]))};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-en">RecursiveShadowcasting</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c)};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>);<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span><span class="pl-k">=</span>[[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],[<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>]];<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-en">e</span>(a,</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line">c,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-en">_renderOctant</span>(a,c,<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[f],d,e)};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute180</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-en">f</span>(a,c,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">var</span> g<span class="pl-k">=</span>(e<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>)<span class="pl-k">%</span><span class="pl-c1">8</span>,l<span class="pl-k">=</span>(e<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>)<span class="pl-k">%</span><span class="pl-c1">8</span>;<span class="pl-c1">this</span>.<span class="pl-en">_renderOctant</span>(a,c,<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[(e<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">8</span>)<span class="pl-k">%</span><span class="pl-c1">8</span>],d,f);<span class="pl-c1">this</span>.<span class="pl-en">_renderOctant</span>(a,c,<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[g],d,f);<span class="pl-c1">this</span>.<span class="pl-en">_renderOctant</span>(a,c,<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[e],d,f);<span class="pl-c1">this</span>.<span class="pl-en">_renderOctant</span>(a,c,<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[l],</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line">d,f)};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute90</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-en">f</span>(a,c,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">var</span> g<span class="pl-k">=</span>(e<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>)<span class="pl-k">%</span><span class="pl-c1">8</span>;<span class="pl-c1">this</span>.<span class="pl-en">_renderOctant</span>(a,c,<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[e],d,f);<span class="pl-c1">this</span>.<span class="pl-en">_renderOctant</span>(a,c,<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">OCTANTS</span>[g],d,f)};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_renderOctant</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">b</span>,<span class="pl-smi">f</span>){<span class="pl-c1">this</span>.<span class="pl-en">_castVisibility</span>(a,c,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,b<span class="pl-k">+</span><span class="pl-c1">1</span>,d[<span class="pl-c1">0</span>],d[<span class="pl-c1">1</span>],d[<span class="pl-c1">2</span>],d[<span class="pl-c1">3</span>],f)};<span class="pl-smi">b</span>.<span class="pl-c1">FOV</span>.<span class="pl-smi">RecursiveShadowcasting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_castVisibility</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">b</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">l</span>,<span class="pl-smi">h</span>,<span class="pl-smi">m</span>,<span class="pl-smi">n</span>,<span class="pl-smi">p</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(b<span class="pl-k">&lt;</span>f))<span class="pl-k">for</span>(;d<span class="pl-k">&lt;=</span>g;d<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">-</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>,q<span class="pl-k">=</span><span class="pl-k">-</span>d,</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line">t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,u<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;=</span>e;){<span class="pl-k">var</span> e<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>,v<span class="pl-k">=</span>a<span class="pl-k">+</span>e<span class="pl-k">*</span>l<span class="pl-k">+</span>q<span class="pl-k">*</span>h,x<span class="pl-k">=</span>c<span class="pl-k">+</span>e<span class="pl-k">*</span>m<span class="pl-k">+</span>q<span class="pl-k">*</span>n,y<span class="pl-k">=</span>(e<span class="pl-k">-</span><span class="pl-c1">.5</span>)<span class="pl-k">/</span>(q<span class="pl-k">+</span><span class="pl-c1">.5</span>),w<span class="pl-k">=</span>(e<span class="pl-k">+</span><span class="pl-c1">.5</span>)<span class="pl-k">/</span>(q<span class="pl-k">-</span><span class="pl-c1">.5</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>(w<span class="pl-k">&gt;</span>b)){<span class="pl-k">if</span>(y<span class="pl-k">&lt;</span>f)<span class="pl-k">break</span>;e<span class="pl-k">*</span>e<span class="pl-k">+</span>q<span class="pl-k">*</span>q<span class="pl-k">&lt;</span>g<span class="pl-k">*</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-en">p</span>(v,x,d,<span class="pl-c1">1</span>);t<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">_lightPasses</span>(v,x)<span class="pl-k">?</span>(t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span>u)<span class="pl-k">:</span>u<span class="pl-k">=</span>w<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-en">_lightPasses</span>(v,x)<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>(t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-en">_castVisibility</span>(a,c,d<span class="pl-k">+</span><span class="pl-c1">1</span>,b,y,g,l,h,m,n,p),u<span class="pl-k">=</span>w)}}<span class="pl-k">if</span>(t)<span class="pl-k">break</span>}};<span class="pl-smi">b</span>.<span class="pl-smi">Color</span><span class="pl-k">=</span>{<span class="pl-en">fromString</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c;<span class="pl-k">if</span>(a <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_cache</span>)<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_cache</span>[a];<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>))<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">0-9a-f</span>]</span><span class="pl-pds">/</span>gi</span>).<span class="pl-en">map</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">parseInt</span>(a,<span class="pl-c1">16</span>)}),<span class="pl-c1">3</span><span class="pl-k">==</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>)d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">17</span><span class="pl-k">*</span>a});<span class="pl-k">else</span> <span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line">c;c<span class="pl-k">++</span>)d[c<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">+=</span><span class="pl-c1">16</span><span class="pl-k">*</span>d[c],<span class="pl-smi">d</span>.<span class="pl-c1">splice</span>(c,<span class="pl-c1">1</span>);<span class="pl-k">else</span> d<span class="pl-k">=</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>rgb<span class="pl-cce">\(</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>, ]</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span><span class="pl-pds">/</span>i</span>))<span class="pl-k">?</span>c[<span class="pl-c1">1</span>].<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-pds">/</span></span>).<span class="pl-en">map</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">parseInt</span>(a)})<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-smi">_cache</span>[a]<span class="pl-k">=</span>d}<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">slice</span>()},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(),b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>b;b<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">1</span>;f<span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)d[b]<span class="pl-k">+=</span><span class="pl-c1">arguments</span>[f][b];<span class="pl-k">return</span> d},<span class="pl-en">add_</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>d;d<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">1</span>;b<span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)a[d]<span class="pl-k">+=</span><span class="pl-c1">arguments</span>[b][d];<span class="pl-k">return</span> a},<span class="pl-en">multiply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(),b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>b;b<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">1</span>;f<span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)d[b]<span class="pl-k">*=</span><span class="pl-c1">arguments</span>[f][b]<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">255</span>;d[b]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(d[b])}<span class="pl-k">return</span> d},<span class="pl-en">multiply_</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>d;d<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">1</span>;b<span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)a[d]<span class="pl-k">*=</span><span class="pl-c1">arguments</span>[b][d]<span class="pl-k">/</span><span class="pl-c1">255</span>;a[d]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(a[d])}<span class="pl-k">return</span> a},<span class="pl-en">interpolate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">3</span><span class="pl-k">&gt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">.5</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(),f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>f;f<span class="pl-k">++</span>)b[f]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(b[f]<span class="pl-k">+</span>d<span class="pl-k">*</span>(c[f]<span class="pl-k">-</span>a[f]));<span class="pl-k">return</span> b},<span class="pl-en">interpolateHSL</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">3</span><span class="pl-k">&gt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">.5</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">rgb2hsl</span>(a),f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">rgb2hsl</span>(c),g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>g;g<span class="pl-k">++</span>)b[g]<span class="pl-k">+=</span>d<span class="pl-k">*</span>(f[g]<span class="pl-k">-</span>b[g]);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">hsl2rgb</span>(b)},<span class="pl-en">randomize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){c <span class="pl-k">instanceof</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Array</span><span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getNormal</span>(<span class="pl-c1">0</span>,c)));<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(),e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>)d[e]<span class="pl-k">+=</span>c <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">b</span>.<span class="pl-c1">RNG</span>.<span class="pl-en">getNormal</span>(<span class="pl-c1">0</span>,c[e]))<span class="pl-k">:</span>c;<span class="pl-k">return</span> d},<span class="pl-en">rgb2hsl</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>]<span class="pl-k">/</span><span class="pl-c1">255</span>,d<span class="pl-k">=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">/</span><span class="pl-c1">255</span>;a<span class="pl-k">=</span>a[<span class="pl-c1">2</span>]<span class="pl-k">/</span><span class="pl-c1">255</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(c,d,a),f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(c,d,a),g<span class="pl-k">=</span>(b<span class="pl-k">+</span>f)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-k">if</span>(b<span class="pl-k">==</span>f)<span class="pl-k">var</span> l<span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> h<span class="pl-k">=</span>b<span class="pl-k">-</span>f,f<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">&lt;</span>g<span class="pl-k">?</span>h<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">-</span>b<span class="pl-k">-</span>f)<span class="pl-k">:</span>h<span class="pl-k">/</span>(b<span class="pl-k">+</span>f);<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> c:l<span class="pl-k">=</span>(d<span class="pl-k">-</span>a)<span class="pl-k">/</span>h<span class="pl-k">+</span>(d<span class="pl-k">&lt;</span>a<span class="pl-k">?</span><span class="pl-c1">6</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> d:l<span class="pl-k">=</span>(a<span class="pl-k">-</span>c)<span class="pl-k">/</span>h<span class="pl-k">+</span><span class="pl-c1">2</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> a:l<span class="pl-k">=</span>(c<span class="pl-k">-</span>d)<span class="pl-k">/</span>h<span class="pl-k">+</span><span class="pl-c1">4</span>}l<span class="pl-k">/=</span><span class="pl-c1">6</span>}<span class="pl-k">return</span>[l,f,g]},<span class="pl-en">hsl2rgb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[<span class="pl-c1">2</span>];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>a[<span class="pl-c1">1</span>])<span class="pl-k">return</span> c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">255</span><span class="pl-k">*</span>c),[c,c,c];<span class="pl-k">var</span> d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">+=</span><span class="pl-c1">1</span>);<span class="pl-c1">1</span><span class="pl-k">&lt;</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-k">--</span>d;<span class="pl-k">return</span> d<span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">6</span><span class="pl-k">?</span>a<span class="pl-k">+</span><span class="pl-c1">6</span><span class="pl-k">*</span>(c<span class="pl-k">-</span>a)<span class="pl-k">*</span>d<span class="pl-k">:</span><span class="pl-c1">.5</span><span class="pl-k">&gt;</span>d<span class="pl-k">?</span>c<span class="pl-k">:</span>d<span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">?</span>a<span class="pl-k">+</span>(c<span class="pl-k">-</span>a)<span class="pl-k">*</span>(<span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">-</span>d)<span class="pl-k">*</span><span class="pl-c1">6</span><span class="pl-k">:</span>a},b<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],b<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">&gt;</span>c<span class="pl-k">?</span>c<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>b)<span class="pl-k">:</span>c<span class="pl-k">+</span>b<span class="pl-k">-</span>c<span class="pl-k">*</span>b,f<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">-</span>b,c<span class="pl-k">=</span><span class="pl-en">d</span>(f,b,a[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>),g<span class="pl-k">=</span><span class="pl-en">d</span>(f,b,a[<span class="pl-c1">0</span>]);a<span class="pl-k">=</span><span class="pl-en">d</span>(f,b,a[<span class="pl-c1">0</span>]<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>);<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">255</span><span class="pl-k">*</span>c),<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">255</span><span class="pl-k">*</span>g),<span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">255</span><span class="pl-k">*</span>a)]},<span class="pl-en">toRGB</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgb(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-en">_clamp</span>(a[<span class="pl-c1">0</span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-en">_clamp</span>(a[<span class="pl-c1">1</span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-en">_clamp</span>(a[<span class="pl-c1">2</span>])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>},<span class="pl-en">toHex</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>d;d<span class="pl-k">++</span>)<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-en">_clamp</span>(a[d]).<span class="pl-c1">toString</span>(<span class="pl-c1">16</span>).<span class="pl-en">lpad</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">2</span>));<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">_clamp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">255</span><span class="pl-k">&lt;</span>a<span class="pl-k">?</span><span class="pl-c1">255</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line">a},_cache<span class="pl-k">:</span>{black<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],navy<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">128</span>],darkblue<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">139</span>],mediumblue<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">205</span>],blue<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">255</span>],darkgreen<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">100</span>,<span class="pl-c1">0</span>],green<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">128</span>,<span class="pl-c1">0</span>],teal<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">128</span>,<span class="pl-c1">128</span>],darkcyan<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">139</span>,<span class="pl-c1">139</span>],deepskyblue<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">191</span>,<span class="pl-c1">255</span>],darkturquoise<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">206</span>,<span class="pl-c1">209</span>],mediumspringgreen<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">250</span>,<span class="pl-c1">154</span>],lime<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">255</span>,<span class="pl-c1">0</span>],springgreen<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">255</span>,<span class="pl-c1">127</span>],aqua<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">255</span>,<span class="pl-c1">255</span>],cyan<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">255</span>,<span class="pl-c1">255</span>],midnightblue<span class="pl-k">:</span>[<span class="pl-c1">25</span>,<span class="pl-c1">25</span>,<span class="pl-c1">112</span>],dodgerblue<span class="pl-k">:</span>[<span class="pl-c1">30</span>,<span class="pl-c1">144</span>,<span class="pl-c1">255</span>],forestgreen<span class="pl-k">:</span>[<span class="pl-c1">34</span>,<span class="pl-c1">139</span>,<span class="pl-c1">34</span>],seagreen<span class="pl-k">:</span>[<span class="pl-c1">46</span>,<span class="pl-c1">139</span>,<span class="pl-c1">87</span>],darkslategray<span class="pl-k">:</span>[<span class="pl-c1">47</span>,<span class="pl-c1">79</span>,<span class="pl-c1">79</span>],darkslategrey<span class="pl-k">:</span>[<span class="pl-c1">47</span>,<span class="pl-c1">79</span>,<span class="pl-c1">79</span>],limegreen<span class="pl-k">:</span>[<span class="pl-c1">50</span>,<span class="pl-c1">205</span>,<span class="pl-c1">50</span>],mediumseagreen<span class="pl-k">:</span>[<span class="pl-c1">60</span>,</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">179</span>,<span class="pl-c1">113</span>],turquoise<span class="pl-k">:</span>[<span class="pl-c1">64</span>,<span class="pl-c1">224</span>,<span class="pl-c1">208</span>],royalblue<span class="pl-k">:</span>[<span class="pl-c1">65</span>,<span class="pl-c1">105</span>,<span class="pl-c1">225</span>],steelblue<span class="pl-k">:</span>[<span class="pl-c1">70</span>,<span class="pl-c1">130</span>,<span class="pl-c1">180</span>],darkslateblue<span class="pl-k">:</span>[<span class="pl-c1">72</span>,<span class="pl-c1">61</span>,<span class="pl-c1">139</span>],mediumturquoise<span class="pl-k">:</span>[<span class="pl-c1">72</span>,<span class="pl-c1">209</span>,<span class="pl-c1">204</span>],indigo<span class="pl-k">:</span>[<span class="pl-c1">75</span>,<span class="pl-c1">0</span>,<span class="pl-c1">130</span>],darkolivegreen<span class="pl-k">:</span>[<span class="pl-c1">85</span>,<span class="pl-c1">107</span>,<span class="pl-c1">47</span>],cadetblue<span class="pl-k">:</span>[<span class="pl-c1">95</span>,<span class="pl-c1">158</span>,<span class="pl-c1">160</span>],cornflowerblue<span class="pl-k">:</span>[<span class="pl-c1">100</span>,<span class="pl-c1">149</span>,<span class="pl-c1">237</span>],mediumaquamarine<span class="pl-k">:</span>[<span class="pl-c1">102</span>,<span class="pl-c1">205</span>,<span class="pl-c1">170</span>],dimgray<span class="pl-k">:</span>[<span class="pl-c1">105</span>,<span class="pl-c1">105</span>,<span class="pl-c1">105</span>],dimgrey<span class="pl-k">:</span>[<span class="pl-c1">105</span>,<span class="pl-c1">105</span>,<span class="pl-c1">105</span>],slateblue<span class="pl-k">:</span>[<span class="pl-c1">106</span>,<span class="pl-c1">90</span>,<span class="pl-c1">205</span>],olivedrab<span class="pl-k">:</span>[<span class="pl-c1">107</span>,<span class="pl-c1">142</span>,<span class="pl-c1">35</span>],slategray<span class="pl-k">:</span>[<span class="pl-c1">112</span>,<span class="pl-c1">128</span>,<span class="pl-c1">144</span>],slategrey<span class="pl-k">:</span>[<span class="pl-c1">112</span>,<span class="pl-c1">128</span>,<span class="pl-c1">144</span>],lightslategray<span class="pl-k">:</span>[<span class="pl-c1">119</span>,<span class="pl-c1">136</span>,<span class="pl-c1">153</span>],lightslategrey<span class="pl-k">:</span>[<span class="pl-c1">119</span>,<span class="pl-c1">136</span>,<span class="pl-c1">153</span>],mediumslateblue<span class="pl-k">:</span>[<span class="pl-c1">123</span>,<span class="pl-c1">104</span>,<span class="pl-c1">238</span>],lawngreen<span class="pl-k">:</span>[<span class="pl-c1">124</span>,</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">252</span>,<span class="pl-c1">0</span>],chartreuse<span class="pl-k">:</span>[<span class="pl-c1">127</span>,<span class="pl-c1">255</span>,<span class="pl-c1">0</span>],aquamarine<span class="pl-k">:</span>[<span class="pl-c1">127</span>,<span class="pl-c1">255</span>,<span class="pl-c1">212</span>],maroon<span class="pl-k">:</span>[<span class="pl-c1">128</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],purple<span class="pl-k">:</span>[<span class="pl-c1">128</span>,<span class="pl-c1">0</span>,<span class="pl-c1">128</span>],olive<span class="pl-k">:</span>[<span class="pl-c1">128</span>,<span class="pl-c1">128</span>,<span class="pl-c1">0</span>],gray<span class="pl-k">:</span>[<span class="pl-c1">128</span>,<span class="pl-c1">128</span>,<span class="pl-c1">128</span>],grey<span class="pl-k">:</span>[<span class="pl-c1">128</span>,<span class="pl-c1">128</span>,<span class="pl-c1">128</span>],skyblue<span class="pl-k">:</span>[<span class="pl-c1">135</span>,<span class="pl-c1">206</span>,<span class="pl-c1">235</span>],lightskyblue<span class="pl-k">:</span>[<span class="pl-c1">135</span>,<span class="pl-c1">206</span>,<span class="pl-c1">250</span>],blueviolet<span class="pl-k">:</span>[<span class="pl-c1">138</span>,<span class="pl-c1">43</span>,<span class="pl-c1">226</span>],darkred<span class="pl-k">:</span>[<span class="pl-c1">139</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],darkmagenta<span class="pl-k">:</span>[<span class="pl-c1">139</span>,<span class="pl-c1">0</span>,<span class="pl-c1">139</span>],saddlebrown<span class="pl-k">:</span>[<span class="pl-c1">139</span>,<span class="pl-c1">69</span>,<span class="pl-c1">19</span>],darkseagreen<span class="pl-k">:</span>[<span class="pl-c1">143</span>,<span class="pl-c1">188</span>,<span class="pl-c1">143</span>],lightgreen<span class="pl-k">:</span>[<span class="pl-c1">144</span>,<span class="pl-c1">238</span>,<span class="pl-c1">144</span>],mediumpurple<span class="pl-k">:</span>[<span class="pl-c1">147</span>,<span class="pl-c1">112</span>,<span class="pl-c1">216</span>],darkviolet<span class="pl-k">:</span>[<span class="pl-c1">148</span>,<span class="pl-c1">0</span>,<span class="pl-c1">211</span>],palegreen<span class="pl-k">:</span>[<span class="pl-c1">152</span>,<span class="pl-c1">251</span>,<span class="pl-c1">152</span>],darkorchid<span class="pl-k">:</span>[<span class="pl-c1">153</span>,<span class="pl-c1">50</span>,<span class="pl-c1">204</span>],yellowgreen<span class="pl-k">:</span>[<span class="pl-c1">154</span>,<span class="pl-c1">205</span>,<span class="pl-c1">50</span>],sienna<span class="pl-k">:</span>[<span class="pl-c1">160</span>,<span class="pl-c1">82</span>,<span class="pl-c1">45</span>],brown<span class="pl-k">:</span>[<span class="pl-c1">165</span>,<span class="pl-c1">42</span>,<span class="pl-c1">42</span>],darkgray<span class="pl-k">:</span>[<span class="pl-c1">169</span>,</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">169</span>,<span class="pl-c1">169</span>],darkgrey<span class="pl-k">:</span>[<span class="pl-c1">169</span>,<span class="pl-c1">169</span>,<span class="pl-c1">169</span>],lightblue<span class="pl-k">:</span>[<span class="pl-c1">173</span>,<span class="pl-c1">216</span>,<span class="pl-c1">230</span>],greenyellow<span class="pl-k">:</span>[<span class="pl-c1">173</span>,<span class="pl-c1">255</span>,<span class="pl-c1">47</span>],paleturquoise<span class="pl-k">:</span>[<span class="pl-c1">175</span>,<span class="pl-c1">238</span>,<span class="pl-c1">238</span>],lightsteelblue<span class="pl-k">:</span>[<span class="pl-c1">176</span>,<span class="pl-c1">196</span>,<span class="pl-c1">222</span>],powderblue<span class="pl-k">:</span>[<span class="pl-c1">176</span>,<span class="pl-c1">224</span>,<span class="pl-c1">230</span>],firebrick<span class="pl-k">:</span>[<span class="pl-c1">178</span>,<span class="pl-c1">34</span>,<span class="pl-c1">34</span>],darkgoldenrod<span class="pl-k">:</span>[<span class="pl-c1">184</span>,<span class="pl-c1">134</span>,<span class="pl-c1">11</span>],mediumorchid<span class="pl-k">:</span>[<span class="pl-c1">186</span>,<span class="pl-c1">85</span>,<span class="pl-c1">211</span>],rosybrown<span class="pl-k">:</span>[<span class="pl-c1">188</span>,<span class="pl-c1">143</span>,<span class="pl-c1">143</span>],darkkhaki<span class="pl-k">:</span>[<span class="pl-c1">189</span>,<span class="pl-c1">183</span>,<span class="pl-c1">107</span>],silver<span class="pl-k">:</span>[<span class="pl-c1">192</span>,<span class="pl-c1">192</span>,<span class="pl-c1">192</span>],mediumvioletred<span class="pl-k">:</span>[<span class="pl-c1">199</span>,<span class="pl-c1">21</span>,<span class="pl-c1">133</span>],indianred<span class="pl-k">:</span>[<span class="pl-c1">205</span>,<span class="pl-c1">92</span>,<span class="pl-c1">92</span>],peru<span class="pl-k">:</span>[<span class="pl-c1">205</span>,<span class="pl-c1">133</span>,<span class="pl-c1">63</span>],chocolate<span class="pl-k">:</span>[<span class="pl-c1">210</span>,<span class="pl-c1">105</span>,<span class="pl-c1">30</span>],tan<span class="pl-k">:</span>[<span class="pl-c1">210</span>,<span class="pl-c1">180</span>,<span class="pl-c1">140</span>],lightgray<span class="pl-k">:</span>[<span class="pl-c1">211</span>,<span class="pl-c1">211</span>,<span class="pl-c1">211</span>],lightgrey<span class="pl-k">:</span>[<span class="pl-c1">211</span>,<span class="pl-c1">211</span>,<span class="pl-c1">211</span>],palevioletred<span class="pl-k">:</span>[<span class="pl-c1">216</span>,<span class="pl-c1">112</span>,<span class="pl-c1">147</span>],thistle<span class="pl-k">:</span>[<span class="pl-c1">216</span>,</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">191</span>,<span class="pl-c1">216</span>],orchid<span class="pl-k">:</span>[<span class="pl-c1">218</span>,<span class="pl-c1">112</span>,<span class="pl-c1">214</span>],goldenrod<span class="pl-k">:</span>[<span class="pl-c1">218</span>,<span class="pl-c1">165</span>,<span class="pl-c1">32</span>],crimson<span class="pl-k">:</span>[<span class="pl-c1">220</span>,<span class="pl-c1">20</span>,<span class="pl-c1">60</span>],gainsboro<span class="pl-k">:</span>[<span class="pl-c1">220</span>,<span class="pl-c1">220</span>,<span class="pl-c1">220</span>],plum<span class="pl-k">:</span>[<span class="pl-c1">221</span>,<span class="pl-c1">160</span>,<span class="pl-c1">221</span>],burlywood<span class="pl-k">:</span>[<span class="pl-c1">222</span>,<span class="pl-c1">184</span>,<span class="pl-c1">135</span>],lightcyan<span class="pl-k">:</span>[<span class="pl-c1">224</span>,<span class="pl-c1">255</span>,<span class="pl-c1">255</span>],lavender<span class="pl-k">:</span>[<span class="pl-c1">230</span>,<span class="pl-c1">230</span>,<span class="pl-c1">250</span>],darksalmon<span class="pl-k">:</span>[<span class="pl-c1">233</span>,<span class="pl-c1">150</span>,<span class="pl-c1">122</span>],violet<span class="pl-k">:</span>[<span class="pl-c1">238</span>,<span class="pl-c1">130</span>,<span class="pl-c1">238</span>],palegoldenrod<span class="pl-k">:</span>[<span class="pl-c1">238</span>,<span class="pl-c1">232</span>,<span class="pl-c1">170</span>],lightcoral<span class="pl-k">:</span>[<span class="pl-c1">240</span>,<span class="pl-c1">128</span>,<span class="pl-c1">128</span>],khaki<span class="pl-k">:</span>[<span class="pl-c1">240</span>,<span class="pl-c1">230</span>,<span class="pl-c1">140</span>],aliceblue<span class="pl-k">:</span>[<span class="pl-c1">240</span>,<span class="pl-c1">248</span>,<span class="pl-c1">255</span>],honeydew<span class="pl-k">:</span>[<span class="pl-c1">240</span>,<span class="pl-c1">255</span>,<span class="pl-c1">240</span>],azure<span class="pl-k">:</span>[<span class="pl-c1">240</span>,<span class="pl-c1">255</span>,<span class="pl-c1">255</span>],sandybrown<span class="pl-k">:</span>[<span class="pl-c1">244</span>,<span class="pl-c1">164</span>,<span class="pl-c1">96</span>],wheat<span class="pl-k">:</span>[<span class="pl-c1">245</span>,<span class="pl-c1">222</span>,<span class="pl-c1">179</span>],beige<span class="pl-k">:</span>[<span class="pl-c1">245</span>,<span class="pl-c1">245</span>,<span class="pl-c1">220</span>],whitesmoke<span class="pl-k">:</span>[<span class="pl-c1">245</span>,<span class="pl-c1">245</span>,<span class="pl-c1">245</span>],mintcream<span class="pl-k">:</span>[<span class="pl-c1">245</span>,<span class="pl-c1">255</span>,<span class="pl-c1">250</span>],ghostwhite<span class="pl-k">:</span>[<span class="pl-c1">248</span>,</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">248</span>,<span class="pl-c1">255</span>],salmon<span class="pl-k">:</span>[<span class="pl-c1">250</span>,<span class="pl-c1">128</span>,<span class="pl-c1">114</span>],antiquewhite<span class="pl-k">:</span>[<span class="pl-c1">250</span>,<span class="pl-c1">235</span>,<span class="pl-c1">215</span>],linen<span class="pl-k">:</span>[<span class="pl-c1">250</span>,<span class="pl-c1">240</span>,<span class="pl-c1">230</span>],lightgoldenrodyellow<span class="pl-k">:</span>[<span class="pl-c1">250</span>,<span class="pl-c1">250</span>,<span class="pl-c1">210</span>],oldlace<span class="pl-k">:</span>[<span class="pl-c1">253</span>,<span class="pl-c1">245</span>,<span class="pl-c1">230</span>],red<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],fuchsia<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">0</span>,<span class="pl-c1">255</span>],magenta<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">0</span>,<span class="pl-c1">255</span>],deeppink<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">20</span>,<span class="pl-c1">147</span>],orangered<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">69</span>,<span class="pl-c1">0</span>],tomato<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">99</span>,<span class="pl-c1">71</span>],hotpink<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">105</span>,<span class="pl-c1">180</span>],coral<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">127</span>,<span class="pl-c1">80</span>],darkorange<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">140</span>,<span class="pl-c1">0</span>],lightsalmon<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">160</span>,<span class="pl-c1">122</span>],orange<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">165</span>,<span class="pl-c1">0</span>],lightpink<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">182</span>,<span class="pl-c1">193</span>],pink<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">192</span>,<span class="pl-c1">203</span>],gold<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">215</span>,<span class="pl-c1">0</span>],peachpuff<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">218</span>,<span class="pl-c1">185</span>],navajowhite<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">222</span>,<span class="pl-c1">173</span>],moccasin<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">228</span>,<span class="pl-c1">181</span>],bisque<span class="pl-k">:</span>[<span class="pl-c1">255</span>,</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">228</span>,<span class="pl-c1">196</span>],mistyrose<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">228</span>,<span class="pl-c1">225</span>],blanchedalmond<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">235</span>,<span class="pl-c1">205</span>],papayawhip<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">239</span>,<span class="pl-c1">213</span>],lavenderblush<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">240</span>,<span class="pl-c1">245</span>],seashell<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">245</span>,<span class="pl-c1">238</span>],cornsilk<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">248</span>,<span class="pl-c1">220</span>],lemonchiffon<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">250</span>,<span class="pl-c1">205</span>],floralwhite<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">250</span>,<span class="pl-c1">240</span>],snow<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">250</span>,<span class="pl-c1">250</span>],yellow<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">255</span>,<span class="pl-c1">0</span>],lightyellow<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">255</span>,<span class="pl-c1">224</span>],ivory<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">255</span>,<span class="pl-c1">240</span>],white<span class="pl-k">:</span>[<span class="pl-c1">255</span>,<span class="pl-c1">255</span>,<span class="pl-c1">255</span>]}};<span class="pl-smi">b</span>.<span class="pl-en">Lighting</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_reflectivityCallback</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span>{passes<span class="pl-k">:</span><span class="pl-c1">1</span>,emissionThreshold<span class="pl-k">:</span><span class="pl-c1">100</span>,range<span class="pl-k">:</span><span class="pl-c1">10</span>};<span class="pl-c1">this</span>.<span class="pl-smi">_fov</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_lights</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_reflectivityCache</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_fovCache</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line">{};<span class="pl-c1">this</span>.<span class="pl-en">setOptions</span>(c)};<span class="pl-smi">b</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setOptions</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> a)<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[c]<span class="pl-k">=</span>a[c];a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">range</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">reset</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setFOV</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_fov</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_fovCache</span><span class="pl-k">=</span>{};<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setLight</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){a<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c;d<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">_lights</span>[a]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> d<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">Color</span>.<span class="pl-en">fromString</span>(d)<span class="pl-k">:</span>d<span class="pl-k">:</span><span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-smi">_lights</span>[a];<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clearLights</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_lights</span><span class="pl-k">=</span>{}};<span class="pl-smi">b</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">reset</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_reflectivityCache</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line">{};<span class="pl-c1">this</span>.<span class="pl-smi">_fovCache</span><span class="pl-k">=</span>{};<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>{},d<span class="pl-k">=</span>{},e<span class="pl-k">=</span>{},f;<span class="pl-k">for</span>(f <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_lights</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_lights</span>[f];d[f]<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];<span class="pl-smi">b</span>.<span class="pl-smi">Color</span>.<span class="pl-en">add_</span>(d[f],g)}<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">passes</span>;f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-en">_emitLight</span>(d,e,c),f<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">passes</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_computeEmitters</span>(e,c));<span class="pl-k">for</span>(<span class="pl-k">var</span> l <span class="pl-k">in</span> e)d<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(d[<span class="pl-c1">0</span>]),d<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(d[<span class="pl-c1">1</span>]),<span class="pl-en">a</span>(c,d,e[l]);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_emitLight</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> a){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(f[<span class="pl-c1">0</span>]),f<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(f[<span class="pl-c1">1</span>]);<span class="pl-c1">this</span>.<span class="pl-en">_emitLightFromCell</span>(g,</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line">f,a[b],c);d[b]<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_computeEmitters</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>{},b;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-k">if</span>(<span class="pl-k">!</span>(b <span class="pl-k">in</span> c)){<span class="pl-k">var</span> f<span class="pl-k">=</span>a[b];<span class="pl-k">if</span>(b <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_reflectivityCache</span>)<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_reflectivityCache</span>[b];<span class="pl-k">else</span>{<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);g<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(l[<span class="pl-c1">0</span>]);l<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(l[<span class="pl-c1">1</span>]);g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_reflectivityCallback</span>(g,l);<span class="pl-c1">this</span>.<span class="pl-smi">_reflectivityCache</span>[b]<span class="pl-k">=</span>g}<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!=</span>g){<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span>[],h<span class="pl-k">=</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>m;m<span class="pl-k">++</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(f[m]<span class="pl-k">*</span>g);l[m]<span class="pl-k">=</span>n;h<span class="pl-k">+=</span>n}h<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">emissionThreshold</span><span class="pl-k">&amp;&amp;</span>(d[b]<span class="pl-k">=</span>l)}}<span class="pl-k">return</span> d};<span class="pl-smi">b</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_emitLightFromCell</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c;c<span class="pl-k">=</span>e <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_fovCache</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">_fovCache</span>[e]<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">_updateFOV</span>(a,c);<span class="pl-k">for</span>(<span class="pl-k">var</span> g <span class="pl-k">in</span> c){e<span class="pl-k">=</span>c[g];g <span class="pl-k">in</span> b<span class="pl-k">?</span>a<span class="pl-k">=</span>b[g]<span class="pl-k">:</span>(a<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],b[g]<span class="pl-k">=</span>a);<span class="pl-k">for</span>(<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>l;l<span class="pl-k">++</span>)a[l]<span class="pl-k">+=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(d[l]<span class="pl-k">*</span>e)}<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Lighting</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_updateFOV</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_fovCache</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c]<span class="pl-k">=</span>d;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">range</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_fov</span>.<span class="pl-en">compute</span>(a,c,b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">h</span>){e<span class="pl-k">=</span>h<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>e<span class="pl-k">/</span>b);<span class="pl-c1">0</span><span class="pl-k">!=</span>e<span class="pl-k">&amp;&amp;</span>(d[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c]<span class="pl-k">=</span>e)}.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>));<span class="pl-k">return</span> d};<span class="pl-smi">b</span>.<span class="pl-en">Path</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_toX</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_toY</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">_fromY</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_fromX</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_passableCallback</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">_options</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line">{topology<span class="pl-k">:</span><span class="pl-c1">8</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> f <span class="pl-k">in</span> e)<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>[f]<span class="pl-k">=</span>e[f];<span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">DIRS</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span>];<span class="pl-c1">8</span><span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span><span class="pl-k">=</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">0</span>],<span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">2</span>],<span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">4</span>],<span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">6</span>],<span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">1</span>],<span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">3</span>],<span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">5</span>],<span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>[<span class="pl-c1">7</span>]])};<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){};<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_getNeighbors</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span>[],b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_dirs</span>[b],g<span class="pl-k">=</span>a<span class="pl-k">+</span>f[<span class="pl-c1">0</span>],f<span class="pl-k">=</span>c<span class="pl-k">+</span>f[<span class="pl-c1">1</span>];<span class="pl-c1">this</span>.<span class="pl-en">_passableCallback</span>(g,f)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>([g,f])}<span class="pl-k">return</span> d};<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-en">Dijkstra</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line">a,c,d,e);<span class="pl-c1">this</span>.<span class="pl-smi">_computed</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_todo</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-en">_add</span>(a,c,<span class="pl-c1">null</span>)};<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">Dijkstra</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">Dijkstra</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c;d <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_computed</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">_compute</span>(a,c);<span class="pl-k">if</span>(d <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_computed</span>)<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_computed</span>[d];a;)<span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>),a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">prev</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">Dijkstra</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(;<span class="pl-c1">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">shift</span>();<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">==</span>c)<span class="pl-k">break</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_getNeighbors</span>(<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>),f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>e[f],l<span class="pl-k">=</span>g[<span class="pl-c1">0</span>],g<span class="pl-k">=</span>g[<span class="pl-c1">1</span>];l<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_computed</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">_add</span>(l,g,b)}}};<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">Dijkstra</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){b<span class="pl-k">=</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>c,prev<span class="pl-k">:</span>b};<span class="pl-c1">this</span>.<span class="pl-smi">_computed</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c]<span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">push</span>(b)};<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-en">AStar</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,c,d,e);<span class="pl-c1">this</span>.<span class="pl-smi">_todo</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_done</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_fromY</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_fromX</span><span class="pl-k">=</span><span class="pl-c1">null</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">AStar</span>.<span class="pl-en">extend</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>);<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">AStar</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">compute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_todo</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_done</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_fromX</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_fromY</span><span class="pl-k">=</span>c;<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-en">_add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_toX</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_toY</span>,<span class="pl-c1">null</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">shift</span>();<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>(f <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_done</span>)){<span class="pl-c1">this</span>.<span class="pl-smi">_done</span>[f]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line">d;<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">==</span>c)<span class="pl-k">break</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_getNeighbors</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>),l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>){f<span class="pl-k">=</span>g[l];<span class="pl-k">var</span> h<span class="pl-k">=</span>f[<span class="pl-c1">0</span>],m<span class="pl-k">=</span>f[<span class="pl-c1">1</span>];f<span class="pl-k">=</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m;f <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">_done</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">_add</span>(h,m,d)}}}<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_done</span>[a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c])<span class="pl-k">for</span>(;d;)<span class="pl-en">b</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>),d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">prev</span>};<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">AStar</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_add</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_distance</span>(a,c);a<span class="pl-k">=</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>c,prev<span class="pl-k">:</span>b,g<span class="pl-k">:</span>b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">g</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>,h<span class="pl-k">:</span>d};c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">g</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">h</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_todo</span>[b],g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">g</span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">h</span>;<span class="pl-k">if</span>(c<span class="pl-k">&lt;</span>g<span class="pl-k">||</span>c<span class="pl-k">==</span>g<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">h</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">splice</span>(b,<span class="pl-c1">0</span>,a);<span class="pl-k">return</span>}}<span class="pl-c1">this</span>.<span class="pl-smi">_todo</span>.<span class="pl-c1">push</span>(a)};<span class="pl-smi">b</span>.<span class="pl-smi">Path</span>.<span class="pl-smi">AStar</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">_distance</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>){<span class="pl-k">switch</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_options</span>.<span class="pl-smi">topology</span>){<span class="pl-k">case</span> <span class="pl-c1">4</span>:<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_fromX</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(c<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_fromY</span>);<span class="pl-k">case</span> <span class="pl-c1">6</span>:<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(c<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_fromY</span>);<span class="pl-k">return</span> b<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_fromX</span>)<span class="pl-k">-</span>b)<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">case</span> <span class="pl-c1">8</span>:<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_fromX</span>),<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(c<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">_fromY</span>))}<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Illegal topology<span class="pl-pds">&quot;</span></span>);};<span class="pl-k">return</span> b});</td>
      </tr>
</table>

  <div class="BlobToolbar position-absolute js-file-line-actions dropdown js-menu-container js-select-menu d-none" aria-hidden="true">
    <button class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1 dropdown-toggle js-menu-target" id="js-file-line-action-button" type="button" aria-expanded="false" aria-haspopup="true" aria-label="Inline file action toolbar" aria-controls="inline-file-actions">
      <svg aria-hidden="true" class="octicon" height="16" version="1.1" viewBox="0 0 13 4" width="14">
        <g stroke="none" stroke-width="1" fill-rule="evenodd">
            <g transform="translate(-1.000000, -6.000000)">
                <path d="M2.5,9.5 C1.67157288,9.5 1,8.82842712 1,8 C1,7.17157288 1.67157288,6.5 2.5,6.5 C3.32842712,6.5 4,7.17157288 4,8 C4,8.82842712 3.32842712,9.5 2.5,9.5 Z M7.5,9.5 C6.67157288,9.5 6,8.82842712 6,8 C6,7.17157288 6.67157288,6.5 7.5,6.5 C8.32842712,6.5 9,7.17157288 9,8 C9,8.82842712 8.32842712,9.5 7.5,9.5 Z M12.5,9.5 C11.6715729,9.5 11,8.82842712 11,8 C11,7.17157288 11.6715729,6.5 12.5,6.5 C13.3284271,6.5 14,7.17157288 14,8 C14,8.82842712 13.3284271,9.5 12.5,9.5 Z"></path>
            </g>
        </g>
      </svg>
    </button>
    <div class="dropdown-menu-content js-menu-content" id="inline-file-actions">
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2">
        <li><a class="js-zeroclipboard dropdown-item" style="cursor:pointer;" id="js-copy-lines" data-original-text="Copy lines">Copy lines</a></li>
        <li><a class="js-zeroclipboard dropdown-item" id= "js-copy-permalink" style="cursor:pointer;" data-original-text="Copy permalink">Copy permalink</a></li>
        <li><a href="/ondras/rot.js/blame/2e423bc6af85e8fbdd166a9abc0ea509b9594ebe/rot.min.js" class="dropdown-item js-update-url-with-hash" id="js-view-git-blame">View git blame</a></li>
          <li><a href="/ondras/rot.js/issues/new" class="dropdown-item" id="js-new-issue">Open new issue</a></li>
      </ul>
    </div>
  </div>

  </div>

  </div>

  <button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
  <div id="jump-to-line" style="display:none">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
      <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
      <button type="submit" class="btn">Go</button>
</form>  </div>

  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

      
<div class="footer container-lg px-3" role="contentinfo">
  <div class="position-relative d-flex flex-justify-between py-6 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap ">
      <li class="mr-3">&copy; 2017 <span title="0.69808s from unicorn-3649010583-g76mq">GitHub</span>, Inc.</li>
        <li class="mr-3"><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li class="mr-3"><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li class="mr-3"><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li class="mr-3"><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>

    <a href="https://github.com" aria-label="Homepage" class="footer-octicon" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="list-style-none d-flex flex-wrap ">
        <li class="mr-3"><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li class="mr-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li class="mr-3"><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li class="mr-3"><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can't perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha256-aYJ/d+JXxuLuXIFrxdvLB5E+We56kLV9j47KbyM1G7Y=" src="https://assets-cdn.github.com/assets/frameworks-69827f77e257c6e2ee5c816bc5dbcb07913e59ee7a90b57d8f8eca6f23351bb6.js"></script>
    
    <script async="async" crossorigin="anonymous" integrity="sha256-YS5CMddl+F4XTWHgZz0Eqgb3z0IEvQ1xJNz2zkZM2oY=" src="https://assets-cdn.github.com/assets/github-612e4231d765f85e174d61e0673d04aa06f7cf4204bd0d7124dcf6ce464cda86.js"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>


  </body>
</html>

